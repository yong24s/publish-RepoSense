{
  "authorDailyContributionsMap": {
    "ongspxm": [
      {
        "insertions": 1,
        "deletions": 1,
        "date": "2018-05-26",
        "commitResults": [
          {
            "hash": "7278855e14451cee6eb8cafc29086d7afde715f6",
            "messageTitle": "[#21] Ramp chart: optimize vertical space (#109)",
            "messageBody": "Let\u0027s increase readability by updating the template to display\r\nthe contribution line of the different users more prominently.",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 20,
        "deletions": 8,
        "date": "2018-07-14",
        "commitResults": [
          {
            "hash": "6df8163cc274b78905e9f175deaa98e15cfdb987",
            "messageTitle": "Fix dashboard padding function (#187)",
            "messageBody": "When displaying contributors with no commit history, the dashboard will\r\ncrash and stop rendering ramp charts for subsequent repositories.\r\n\r\nThis is caused by the padding of the ramp charts. The padding is added\r\nto the ramp chart to align the charts across different users and\r\nprojects.\r\n\r\nThe amount of padding required is calculated from the `sinceDate` of\r\nthe first and last date entry of the user. This becomes problematic\r\nwhen the user have no date entries at all, causing the system to run\r\ninto problem, and hence, skipping the ramp chart generation for the\r\nparticular project.\r\n\r\nTo fix this, let\u0027s alter the padding function to take into the edge\r\ncase of a empty date range, and artifically fill up the whole timeline\r\nwith generated empty dates.",
            "insertions": 20,
            "deletions": 8
          }
        ]
      },
      {
        "insertions": 25,
        "deletions": 708,
        "date": "2018-07-19",
        "commitResults": [
          {
            "hash": "a3e23775486d350afd80af7b5d40c5c89d84d5a2",
            "messageTitle": "Remove generated template files from source code (#195)",
            "messageBody": "Since the dashboard revamp in v1.1, `template` no longer contains the\r\nsource of the dashboard. Instead, the source files are contained in\r\n`frontend/src`, andcompiled into the corresponding `html` and `css`\r\nfiles.\r\n\r\nAs good practice, these generated template files shouldn\u0027t be track.\r\nLet\u0027s include the generation of all these template files in the gradle\r\nbuild process instead.",
            "insertions": 14,
            "deletions": 692
          },
          {
            "hash": "12ab8fafabc9745aed7ca28c5b12d64fa1806e16",
            "messageTitle": "[#197, #201] Fix ramp chart positioning (#198)",
            "messageBody": "When the dashboard loads two projects of different date range, some of\r\nthe dashboard attributes will be messed up and this affects the\r\nrendering of the ramp charts.\r\n\r\nMore specifically, the `sliceWidth` and `sliceCount` will be affected\r\nby the date range and will cause the dashboard to incorrectly \"thinks\"\r\nthat it has more slices then it actually does, and hence causing it to\r\nbe incorrectly displayed squashed up together.\r\n\r\nLet\u0027s remove the attributes in `v_summary` and generate the width and\r\nposition of the slices from the actual array of slices instead.",
            "insertions": 11,
            "deletions": 16
          }
        ]
      },
      {
        "insertions": 10,
        "deletions": 4,
        "date": "2018-07-20",
        "commitResults": [
          {
            "hash": "0d7046fbac81d00491e4e6325007840820d01d5a",
            "messageTitle": "Dashboard: remove navigation bar (#171)",
            "messageBody": "After the removal of the feature to support multiple reports, the\r\nnavigation bar contains only the reposense logo.\r\n\r\nThe bar now plays only an aesthetic role and has no functional purpose,\r\nwhich is a waste of vertical space.\r\n\r\nSimilarly the filters on the summary tab could be more concisely\r\ndisplayed to fully utilize the vertical space.\r\n\r\nLet\u0027s make the necessary UI changes to improve vertical space usage.",
            "insertions": 5,
            "deletions": 1
          },
          {
            "hash": "a3c6bccff3a344f78b0d66a68cab517cf5e908ff",
            "messageTitle": "[#156] Dashboard: synchronize code panel display name (#164)",
            "messageBody": "The dashboard\u0027s overview displays the DisplayName as specified in the CSV\r\nconfig file while the side panel displays the gitHub ID instead.\r\n\r\nThis may cause confusion to users as the display name and for overview and the\r\nside panel is different.\r\n\r\nLet\u0027s update the code panel to show the the same display name as overview.",
            "insertions": 5,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 12,
        "deletions": 23,
        "date": "2018-07-25",
        "commitResults": [
          {
            "hash": "7f2e2e6d1eeca62c5173cfc07124a145829e8ea8",
            "messageTitle": "[#214] Fix code panel not showing the correct files (#168)",
            "messageBody": "When switching to display another author\u0027s code contribution, some of\r\nthe code panel\u0027s ui elements continue to display old data.\r\n\r\nTo prevent that from happening, let\u0027s tag the `v_authorship` module\r\nwith a key which forces vue to re-render `v_summary` as a new instance\r\nwith a fresh set of data.",
            "insertions": 12,
            "deletions": 23
          }
        ]
      },
      {
        "insertions": 51,
        "deletions": 56,
        "date": "2018-07-27",
        "commitResults": [
          {
            "hash": "b078d8abc99e04444a49a1274b354c4748e0e48c",
            "messageTitle": "Dashboard: determine date range only after all repo data are loaded (#227)",
            "messageBody": "The dashboard as of v1.1.1 is loaded dynamically after each\r\n`commits.json` is loaded.\r\n\r\nIf the filter date range is not defined, the range will be determined\r\nby the first and last commits of that particular repository. This start\r\nand end dates will then be set as the filter dates to be used for later\r\nrendering of the other repositories.\r\n\r\nHowever, this leads to a problem when the repositories are of a\r\ndifferent date range, if the earlier repository is loaded first, the\r\ndate range will not be able to display the ramps in the later\r\nrepository, vice versa.\r\n\r\nTo fix this issue, let\u0027s only determine the date ranges after all the\r\n`commits.json` of the repositories is loaded.",
            "insertions": 50,
            "deletions": 55
          },
          {
            "hash": "09d28bff3a362d64f238af688bc68fbf4d5cbf6b",
            "messageTitle": "[#223] Dashboard: sort by authors by name within repo  (#233)",
            "messageBody": "The current dashboard as of v1.1.2 sorts the users in the repository\r\nby the number of contributions they have made for the project in that\r\ntime period.\r\n\r\nThis however puts an unnecessary focus on the contribution LoC which\r\nmay not be a true reflection of the users\u0027 contribution. \r\n\r\nLet\u0027s change the default view to sort the users by their names instead.",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 70,
        "deletions": 33,
        "date": "2018-07-30",
        "commitResults": [
          {
            "hash": "ea6c774283b3b6b97a74c1d62bbad6252cce80e8",
            "messageTitle": "[#224] Dashboard: restore view state using query parameters (#160)",
            "messageBody": "The summary dashboard plays an important role in highlighting and\r\nfiltering the report data to provide the most relevant view for the\r\nusers.\r\n\r\nPermalinks was a feature implemented in the previous dashboard that\r\nenables the users to quickly save the state of the dashboard to quickly\r\nreturn to it when needed.\r\n\r\nWhile useful, this feature was not core to the usage of the dashboard,\r\nhence left out during the feature for feature reimplementation during\r\nthe dashboard structural changes.\r\n\r\nLets implement this permalink feature in the main vue module. New\r\nfields will be emitted from their individual modules into the global\r\nobject.\r\n\r\nThe summary module will read the information from the global object\r\nthen load the filtered view accordingly.\r\n\r\nImplementing it in the main modules also provides us the option of\r\nopening up other modules for the permalink features if needed in the\r\nfuture.",
            "insertions": 65,
            "deletions": 32
          },
          {
            "hash": "dec51805c60b3b7f204f296456e098047aceb9da",
            "messageTitle": "Dashboard: fix incompatibility with Microsoft Edge (#252)",
            "messageBody": "Microsoft Edges does not support the full set of features available in\r\nthe ES6 specification, amongst which, includes the object spread\r\noperator. [1]\r\n\r\nLet\u0027s remove the usage of the object spread operator so allow the\r\ndashboard to be run from edge browser.\r\n\r\n[1] Discussion on Edge\u0027s support for object spread operator\r\nhttps://github.com/Polymer/tools/issues/173",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "f0d51489d0127477d5d738f35091c1538fea73cb",
            "messageTitle": "[#209] Dashboard: hide overflow elements (#251)",
            "messageBody": "\"label\" tag seems to be greater than the height allocated to it by the\r\nrender engine. This results in the \"scrollbar\" arrows popping up to\r\nshow the users the \"full content\".\r\n\r\nThis can be distracting for users when they are trying to navigate the\r\nsite. Let\u0027s remove this scrollbar arrows by applying the \"overflow-y:\r\nhidden\" CSS setting to the filter labels.",
            "insertions": 4,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 1,
        "deletions": 1,
        "date": "2018-07-31",
        "commitResults": [
          {
            "hash": "6be4e09b35385a06fb6d6158f093f242ad8bd46d",
            "messageTitle": "[#254] Fix dashboard unable to load authorship.json file (#253)",
            "messageBody": "When trying to open up the right side tab panel to load the authorship\r\ninformation, the file not found error pops up, and the panel stays\r\nblank.\r\n\r\nTurns out, the error was introduced when we were trying to package all\r\nthe information into a single object when passing it into the module.\r\nTo fix this, let\u0027s update the way the directory whereby the file is\r\nbeing loaded.",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 3,
        "deletions": 3,
        "date": "2018-08-02",
        "commitResults": [
          {
            "hash": "8ed9b8ddd1b400a8a3ed46ae362c45efafe3d258",
            "messageTitle": "[#263] Add timezone to ramp\u0027s github redirect link (#266)",
            "messageBody": "Occasionally, clicking a ramp will show no commits found for the\r\nspecified user. This is because our git log command uses a constant\r\ntimezone (Singapore UTC+8) and this mis-align with the GitHub time\r\nsystem.\r\n\r\nLet\u0027s fix this by adding the timezone to the github redirect link as\r\nwell.",
            "insertions": 3,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 8,
        "deletions": 4,
        "date": "2018-08-06",
        "commitResults": [
          {
            "hash": "62c0f68866b02222e90016c5f102a7bbcb55783b",
            "messageTitle": "Dashboard: enable search to use multiple keywords (#256)",
            "messageBody": "Current search function filter the authors/repositories using exact\r\nsentence match. \r\n\r\nHowever, it may be more useful for users to be able to search using\r\nmultiple keywords.\r\n\r\nLet\u0027s modify the search filter to pick out the results based on params\r\nseparated by spaces using or search technique.",
            "insertions": 8,
            "deletions": 4
          }
        ]
      },
      {
        "insertions": 16,
        "deletions": 22,
        "date": "2018-08-09",
        "commitResults": [
          {
            "hash": "14a7e76b0930b01457c758d5d41c127c743596dd",
            "messageTitle": "[#264] Code view: add total number of lines contributed for each file (#282)",
            "messageBody": "Code panel could use more useful information such as number of lines\r\ncontributed for each file. This would give the reviewer a rough idea\r\nhow many lines the author has contributed to each component.\r\n\r\nLet\u0027s add the line of code information into the display.",
            "insertions": 9,
            "deletions": 1
          },
          {
            "hash": "5aa0913a3a68cfa5f20f7ed502a2efca8785b75b",
            "messageTitle": "[#270] Dashboard: remove unused tabs bar in the code view (#285)",
            "messageBody": "Code view only has a single page, which makes the addition of tabs bar\r\nserves no purpose at this stage\r\n\r\nLet\u0027s remove it since its not in used.",
            "insertions": 0,
            "deletions": 13
          },
          {
            "hash": "6cde620ac379109f7f0b93498d29c1cfd221a68f",
            "messageTitle": "[#259] Dashboard: add an indicator to code view (#287)",
            "messageBody": "New users may not know all the functionalities that are available to\r\nthem, hence hidden functionalities such as code view may go unnoticed.\r\n\r\nTo enhance our user friendliness, let\u0027s add a tool-tip and icon to the\r\nramp chart title so that the code view feature stands out more\r\nintuitively.",
            "insertions": 7,
            "deletions": 8
          }
        ]
      },
      {
        "insertions": 13,
        "deletions": 6,
        "date": "2018-08-11",
        "commitResults": [
          {
            "hash": "d22164265ca71046dbcfefc1f853f098ee82dbba",
            "messageTitle": "[#258] Dashboard: optimize settings bar to fit various screen sizes (#286)",
            "messageBody": "Settings bar does not degrade gracefully for smaller screen sizes.\r\n\r\nThis make the ui looks disorganized and messy.\r\n\r\nLet\u0027s readjust the font size, grouping and margin to make the settings\r\nbar looks neater.",
            "insertions": 13,
            "deletions": 6
          }
        ]
      },
      {
        "insertions": 9,
        "deletions": 0,
        "date": "2018-08-12",
        "commitResults": [
          {
            "hash": "a39ecf23865c0a65aabb032ad3c5afcf971266aa",
            "messageTitle": "[#267] Reduce memory cache in code view (#290)",
            "messageBody": "Code view caches the past loaded repository\u0027s authorship data to avoid\r\nrepetitive loading which increases the response time.\r\n\r\nHowever, this can cause the memory usage to keep increasing as\r\nmore and more repository\u0027s authorship data gets stored as cache.\r\n\r\nAs users are unlikely to revisit repositories that were loaded long\r\nago, let\u0027s preserve only the most recent 2 repository\u0027s authorship data\r\nas cache.",
            "insertions": 9,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 93,
        "deletions": 113,
        "date": "2018-08-16",
        "commitResults": [
          {
            "hash": "623a6a7a386a3e566107a79539f6f63fcf34578a",
            "messageTitle": "[#289] Code view: tweak code packing algorithm (#292)",
            "messageBody": "Untouched code segments that are smaller than minimum lines are\r\ndisplayed together with the touched code. This distorts the truth as\r\nthese code do not belong to the author and may lead to unnecessary\r\ndisputes.\r\n\r\nLet\u0027s encapsulate untouched code in the expand box only if \u003e5 lines but\r\nstill differentiate them using color irregardless.",
            "insertions": 93,
            "deletions": 113
          }
        ]
      },
      {
        "insertions": 9,
        "deletions": 7,
        "date": "2018-08-17",
        "commitResults": [
          {
            "hash": "f4003495b44a1a236735325e61bf79a57eac095a",
            "messageTitle": "[#304] Fix TypeError: \"commits[0] is undefined\" (#303)",
            "messageBody": "For authors with absolutely no commit history,  v_summary runs into\r\ntrouble trying to determine the date range of the commits.\r\n\r\nLet\u0027s do a check before calculating the date range of the commits.",
            "insertions": 9,
            "deletions": 7
          }
        ]
      },
      {
        "insertions": 3,
        "deletions": 10,
        "date": "2018-09-06",
        "commitResults": [
          {
            "hash": "7af8404c7634fcc92bdbf363380411c7cb0068ab",
            "messageTitle": "[#321] Dashboard: add landing page link in footer (#326)",
            "messageBody": "Dashboard footer displays only the generated timestamp.\r\n\r\nThis does not credit RepoSense in anyway, also user may not know how to\r\nuse the dashboard.\r\n\r\nLet\u0027s include a link to direct user to RepoSense landing page.",
            "insertions": 3,
            "deletions": 10
          }
        ]
      },
      {
        "insertions": 16,
        "deletions": 4,
        "date": "2018-10-03",
        "commitResults": [
          {
            "hash": "6a45e4f493956f45dc3658138845b5ee80971b35",
            "messageTitle": "[#336] Dashboard crashes when modify date to be out of range (#339)",
            "messageBody": "When we try to modify the date of the Since or Until filter in the\r\ndashboard, if the date specified is out of range, like setting year\r\n2020 for until date, or any year for the since date (since typing the\r\n1st number will set it to be that year 1st), the dashboard will hang,\r\nand 66crash.\r\n\r\nLet\u0027s fix this by adding a validation check, to ensure that the\r\nfilter dates are within the analysis date range.",
            "insertions": 16,
            "deletions": 4
          }
        ]
      },
      {
        "insertions": 15,
        "deletions": 3,
        "date": "2018-10-14",
        "commitResults": [
          {
            "hash": "adec166ee3347f68c0e8fb169e18b19dc375e26c",
            "messageTitle": "[#358] Report#datepicker: default value not filled on initial load (#359)",
            "messageBody": "The date picker does not display the date range of summary view on\r\nload.\r\n\r\nLet\u0027s obtain the date picker value from the hash param if provided,\r\notherwise, set it to be the minimum and maximum dates of the generated\r\nreport by default.",
            "insertions": 15,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 96,
        "deletions": 10,
        "date": "2018-12-14",
        "commitResults": [
          {
            "hash": "1aeb75f58737fd52fb8d1f8965a243fbaed38f93",
            "messageTitle": "DeveloperGuide: update documentation for frontend (#242)",
            "messageBody": "The new dashboard doesn\u0027t come with the updated development\r\ndocumentation. And this can prove troublesome for new developers as\r\nthey will have to spend a lot of time in the current codebase to make\r\nsense of how the dashboard is structured.\r\n\r\nLet\u0027s include a short writeup of the dashboard framework to help\r\nexplain how the data is being rendered more clearly.",
            "insertions": 96,
            "deletions": 10
          }
        ]
      },
      {
        "insertions": 3,
        "deletions": 0,
        "date": "2019-01-22",
        "commitResults": [
          {
            "hash": "1fe254b9f129339ae400d48f0cd868dbd0d6830c",
            "messageTitle": "[#373] Fix typing lag in the report search bar (#495)",
            "messageBody": "Typing in the report search bar seems to be a bit laggy on the\r\ndashboard-demo. Investigation reveals that lag is caused by the vue\r\nobject trying to rewrite the `v_model` on every keystroke.\r\n\r\nLet\u0027s update and trigger the search only when the typing is complete,\r\nie we will be updating the summary view as triggered by the `onchange`\r\nevent of the search filter `input`.",
            "insertions": 3,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 72,
        "deletions": 75,
        "date": "2019-01-30",
        "commitResults": [
          {
            "hash": "a7e6617519f8048c324c5ae07bc829ccd843ea80",
            "messageTitle": "[#502] Enable ESLint JavaScript linter on travis (#514)",
            "messageBody": "ESLint was implemented, however it doesn\u0027t seems to be enforcing\r\nstyle check on any of the CI platforms. \r\n\r\nThis is due to the glob that was passed into eslint was incorrect which\r\ncauses it to skip the js files.\r\n\r\nLet\u0027s modify the glob string to enable the javascript linter, and also\r\nfixed the violations that were found.",
            "insertions": 72,
            "deletions": 75
          }
        ]
      },
      {
        "insertions": 132,
        "deletions": 152,
        "date": "2019-02-08",
        "commitResults": [
          {
            "hash": "0fa163e163f63967545349bf921325915fc4c36e",
            "messageTitle": "[#468] Add per-commit granularity to the report (#500)",
            "messageBody": "The dashboard only allows summary view for daily and weekly\r\ngranularities.\r\n\r\nWhile the daily and weekly intervals give the reviewer the rough\r\nimpression of the authors\u0027 workload, it does not provide any insights\r\non the authors\u0027 commit frequency, commit organization and merged\r\nchanges. These information are important in helping users to further\r\nunderstand the authors\u0027 workflow and contribution.\r\n\r\nLet\u0027s implement summary view for per commit granularity. To do so,\r\nlet\u0027s update `commits.json` report to store the list of each\r\nCommitResult inside the daily interval contribution data, and update\r\nthe frontend implement the per commit granularity using this data.\r\n\r\nAs the weekly interval view is now generated on the frontend based\r\non the daily view by #129, there is no longer a need to store the\r\nweekly interval contribution data in commits.json.\r\n\r\nLet\u0027s also remove the weekly interval contribution data in\r\n`commits.json` report to reduce the size of the json files.\r\n",
            "insertions": 132,
            "deletions": 152
          }
        ]
      },
      {
        "insertions": 28,
        "deletions": 17,
        "date": "2019-02-21",
        "commitResults": [
          {
            "hash": "6dd74a04a3d1da6aa3b1636d0b0a7fdd2f873591",
            "messageTitle": "Refactor window.location.hash update methods (#558)",
            "messageBody": "`window.location.hash` is used and updated in multiple places.\r\nThis results in duplication of code for writing to and using of\r\nhash parameters.\r\n\r\nLet\u0027s refactor the way we update the location hash by creating\r\nfunctions for accessing and using hashes: `addHash`, `removeHash`,\r\n`encodeHash` and `decodeHash`.\r\n\r\nAll these functions will be implemented with `window.hashParams` as the\r\nmain way of access and writing to `location.hash`.\r\n",
            "insertions": 28,
            "deletions": 17
          }
        ]
      },
      {
        "insertions": 2,
        "deletions": 2,
        "date": "2019-03-07",
        "commitResults": [
          {
            "hash": "6f7ccc20c229f9531b56cb94cf584aa94f7beedd",
            "messageTitle": "[#585] Fix linearly unsynchronous ramp charts (#591)",
            "messageBody": "Checks are performed on the dates prior to every update of the ramp\r\nchart\u0027s filter.\r\n\r\nHowever, the checks only accounts for cases where the dates are valid,\r\nchecking that they are within the given range. When an invalid date\r\nsuch as \"2019-02-31\" is given, the checks are bypassed, causing\r\nramp charts of different repositories to have different end dates and\r\nlinearly unsynchronous.\r\n\r\nLet\u0027s add an additional check to ensure that valid dates were\r\ngiven before we update the filter fields.",
            "insertions": 2,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 33,
        "deletions": 39,
        "date": "2019-03-13",
        "commitResults": [
          {
            "hash": "daaed304969cb9694e002f0fa4ff7b6a46d4215e",
            "messageTitle": "Refactor toolbar into v-authorship tab (#566)",
            "messageBody": "The toolbar for the \"expand/collapse all\" text is outside of the\r\nv-authorship tab.\r\n\r\nThis shouldn\u0027t be the case as it makes it difficult to extend and\r\ninclude other kinds of tabs.\r\n\r\nLet\u0027s shift the toolbar into the v-authorship tab, and make some\r\ncorresponding changes to how the toggle state is changed.\r\n\r\nThis will keep the toolbar within the authorship tab, which makes sense\r\nas the button is only relevant for the authorship tab. In light that we\r\nare going to have other kinds of tabs to extend the use of the side tab\r\nin the future.",
            "insertions": 33,
            "deletions": 39
          }
        ]
      },
      {
        "insertions": 2,
        "deletions": 2,
        "date": "2019-04-16",
        "commitResults": [
          {
            "hash": "7640e703acbcfbb55699c80dd4ca53add97511e4",
            "messageTitle": "[#603] GitLog: replace author date with commit date (#641)",
            "messageBody": "The ramps in report are placed according to the authored date to\r\nvisualize the actual timeline when the authors make their\r\ncontribution.\r\n\r\nHowever, GitHub repos use commit date in their timeline. This leads to\r\ndiscrepancy when performing comparison with the GitHub platform.\r\nFurthermore, this is also the factor causing the url on the ramps\r\ndirecting users to incorrect dated commit list web page.\r\n\r\nTo make our product coherent to GitHub users, let\u0027s change to use\r\ncommit dates for our ramp chart.",
            "insertions": 2,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 630,
        "deletions": 65,
        "date": "2019-05-30",
        "commitResults": [
          {
            "hash": "a6b3cac11da8860c30eacafef8f3a488e9fc31f7",
            "messageTitle": "Report: Add zoom in feature for ramp charts (#573)",
            "messageBody": "The commit granularity setting for the ramp chart slice produces a ramp \r\nchart that may be too dense to reveal any substantial information. \r\n\r\nLet\u0027s add a side panel that provides a zoomed-in view of the ramp \r\nchart, selected based on a specified time frame.",
            "insertions": 630,
            "deletions": 65
          }
        ]
      }
    ],
    "jamessspanggg": [
      {
        "insertions": 2,
        "deletions": 2,
        "date": "2019-05-31",
        "commitResults": [
          {
            "hash": "3bbe5fccfc04aeb2742d814fef4fb8f534f3b55e",
            "messageTitle": "[#672] Toolbar: set \u0027commit\u0027 as default for granularity (#684)",
            "messageBody": "The default value of granularity is `Day`.\r\n\r\n`Commit` as granularity is more closer to reality because users are more\r\nlikely to observe per commits rather than per day/week. Users can choose\r\na more summarized view at their discretion.\r\n\r\nLet\u0027s change the default value for granularity to `Commit`.\r\n",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "3bf07fd69586874cf3238e9b28ea025b96f7ba97",
            "messageTitle": "[#699] Report: standardize the author\u0027s name display (#701)",
            "messageBody": "When summary charts are grouped by none or repo/branch, author\u0027s name\r\ndisplay shows only the display name. Whereas when grouped by author,\r\nthe name display shows the display name as well as GitHub username.\r\n\r\nThis causes inconsistency in the name display. Furthermore, user won\u0027t\r\nbe able to refer to the author\u0027s GitHub username when the summary\r\ncharts are not grouped by author.\r\n\r\nLet\u0027s standardize all the name display using the format,\r\n[display name] (github username).",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 32,
        "deletions": 2,
        "date": "2019-06-03",
        "commitResults": [
          {
            "hash": "7c0750c510003722f72ad363cb50ce759aa6735a",
            "messageTitle": "[#635] CodeView: add line number to code (#669)",
            "messageBody": "The code view displays only the code without the line number.\r\n\r\nIt is hard to associate a specific line from the code view with the\r\nactual code without the line number.\r\n\r\nLet\u0027s update the code view to display the line numbers by adding an\r\narray in each segment to keep track of the line numbers of the code.",
            "insertions": 32,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 38,
        "deletions": 17,
        "date": "2019-06-05",
        "commitResults": [
          {
            "hash": "ad1e0265a549888e25fc4b94759cca4bea575785",
            "messageTitle": "[#702] Fix url directing to the wrong branch (#704)",
            "messageBody": "The Octocat icon always links to the master branch of a GitHub \r\nrepository.\r\n\r\nOctocat icons of summary charts that are not within the master \r\nbranch will still point to the URL of the master branch.\r\n\r\nLet\u0027s update the URL to point to their respective branch.",
            "insertions": 18,
            "deletions": 10
          },
          {
            "hash": "afa5be94ea35410ed126c2958024696a62d4fa2e",
            "messageTitle": "[#664] Toolbar: expand width for `breakdown by file format` (#685)",
            "messageBody": "The width of label `breakdown by fileformat` is set to 110px which\r\ndisplays in two lines even though there are enough room for it to\r\ndisplay in a single line.\r\n\r\nThis will cause the label to not look as organised as compared to the\r\nlabel being displayed in a single line.\r\n\r\nLet\u0027s expand the width for `breakdown by file format` by setting the\r\nwidth as fit-content to ensure that the label is displayed in a single\r\nline.",
            "insertions": 6,
            "deletions": 5
          },
          {
            "hash": "eb9c7460a0e7672bff50c5e0708cb1ff0ed5b329",
            "messageTitle": "[#663] ChartView: add total contribution of group (#697)",
            "messageBody": "A group only shows the total contribution of each author or repo/branch\r\nwithin the group but not the total contribution of all combined.\r\n\r\nIt is rather difficult for the user to compare the total contribution\r\nbetween groups as the user would need to sum up the contribution of each\r\nrow in order to get the total contribution of a group.\r\n\r\nLet\u0027s display the total contribution of groups beside the group title so\r\nthat it is easier for the user to do comparisons between groups.",
            "insertions": 14,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 36,
        "deletions": 42,
        "date": "2019-06-10",
        "commitResults": [
          {
            "hash": "f96222a79167a55bb30fc9ced940b8660ef72425",
            "messageTitle": "[#647] Toolbar: rename values in `sort group by` (#668)",
            "messageBody": "The `sort groups by` selection contains the option of `repo/branch` and\r\n`name` when charts are grouped by Repo/Branch and Author respectively.\r\n\r\nAs it is a `sort group by` selection, there\u0027s is no need to use two\r\ndifferent options `repo/branch` and `name` as they both refer to the\r\n`group name`\r\n\r\nLet\u0027s rename both values to `group name` to standardize the values.",
            "insertions": 36,
            "deletions": 42
          }
        ]
      },
      {
        "insertions": 34,
        "deletions": 24,
        "date": "2019-06-11",
        "commitResults": [
          {
            "hash": "0d3ba8a7da3f4c97014ece0805bef0d1e40799b9",
            "messageTitle": "[#660] ChartView: remove ramp slices not within date range (#670)",
            "messageBody": "After adjusting the date range, ramp slices that are not within the \r\ndate range still shows in the ramp row.\r\n\r\nUsers would only want to see the ramp slices that are within the date \r\nrange.\r\n\r\nLet\u0027s remove the ramp slices that are not within date range by \r\nchecking if the position of the ramp slices are within the width of \r\nthe ramp row (if it is not within the width of the ramp row, the ramp\r\nslice is not within date range) before adding the ramp slices to the \r\nramp row.",
            "insertions": 34,
            "deletions": 24
          }
        ]
      },
      {
        "insertions": 2,
        "deletions": 0,
        "date": "2019-06-15",
        "commitResults": [
          {
            "hash": "27152fb10573899b79fe93ffc2e211329ce9a4fc",
            "messageTitle": "[#712] ChartView: fix misalignment of chart title (#715)",
            "messageBody": "When \u0027breakdown by file format\u0027 is checked, the title of a chart aligns\r\nbeside the contribution bars of the previous chart when the\r\ncontribution bars\u0027 height of exceeds the margin allocated.\r\n\r\nLet\u0027s fix this misalignment by adding css property \u0027clear:left\u0027 to the\r\nchart title so that the chart title will always start at a new line.",
            "insertions": 2,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 0,
        "deletions": 10,
        "date": "2019-06-16",
        "commitResults": [
          {
            "hash": "5a405e1be35dc5ae8ccf832dd5caf27a94f699d4",
            "messageTitle": "[#689] v_summary.js: remove unused remnants code (#733)",
            "messageBody": "Unused code was found in v_summary.js; specifically code associated\r\nwith the variable, filterSortReverse. They are remnants left behind by\r\nthe improvement of sort controls introduced in #618.\r\n\r\nThe unused code was originally bind to the reverse checkbox in the\r\nolder version of RepoSense. As the checkbox was replaced by the\r\nintroduction of ascending and descending options in #618, the code is\r\nnow unused and redundant. This is also partially due to the complexity\r\nbrought upon by new sorting group, the reversing has to be done within\r\nthe code of descending\u0027s logic, rendering those code not reusable.\r\n\r\nLet\u0027s remove the unused code associated to the variable, \r\nfilterSortReverse and it\u0027s implementations.",
            "insertions": 0,
            "deletions": 10
          }
        ]
      },
      {
        "insertions": 36,
        "deletions": 22,
        "date": "2019-06-26",
        "commitResults": [
          {
            "hash": "194bd125a57a63f2e764a348b7549f9bba18213e",
            "messageTitle": "[#645] CodeView: improve UI of sort bar (#716)",
            "messageBody": "In the UI of sortbar: \r\n- The font size of 3 controls (searchbar, checkbox, sort) are different\r\n- The sorting option\u0027s position is below the radio controls\r\n- The font of reverse checkbox is red in colour\r\n- The gaps between sorting option and radio controls is not \r\nstandardized\r\n\r\nLets:\r\n- Standardize the font size of all 3 controls so that the sort bar\r\nlooks neater\r\n- Shift sorting option to be above radio controls to further\r\nemphasize the number of radio buttons better\r\n- Set the font of reverse checkbox to be black in color to\r\ndifferentiate from other checkboxes and to be consistent with the\r\nChartView\r\n- Standardize the gaps between sorting option and radio controls",
            "insertions": 28,
            "deletions": 19
          },
          {
            "hash": "5ad348098a9baa2effea7646bf0463da8cae5dd2",
            "messageTitle": "[#720] Set command-click to activate zoom-in feature for macOS devices (#730)",
            "messageBody": "Ctrl + mouse left-click is the default combination to activate the\r\nzoom-in feature for all environment.\r\n\r\nHowever, as the combination is registered as a right-click in macOS\r\nenvironment, users of macOS devices wouldn\u0027t be able to activate the\r\ncorresponding feature.\r\n\r\nLet\u0027s modify the zoom-in controls to allow command click for macOS \r\ndevices and control click for all other devices.",
            "insertions": 8,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 35,
        "deletions": 10,
        "date": "2019-06-27",
        "commitResults": [
          {
            "hash": "8591328fbf84af35f2943756ae3f2a6fed8f67ef",
            "messageTitle": "[#666] CodeView: load un-authored code only when toggled (#740)",
            "messageBody": "Viewing the changes in code of an author causes the app to \r\nrender all authored and un-authored segments within modified files.\r\nA small change in large file will cause the entire file to be preloaded.\r\n\r\nWhen an author has small changes done to a lot of large files, it will\r\nlead to an unresponsive page as loading the large un-authored segments\r\nwill affect the rendering speed. Furthermore, the preloading of all \r\nun-authored code is not necessary as users might only view the \r\nun-authored code under certain circumstances. (e.g. when the user \r\ndoes not understand why the author added the authored code)\r\n\r\nLet\u0027s modify the app to only load the un-authored code when the \r\nuser toggles the \u0027Show untouched code\u0027 icon.",
            "insertions": 35,
            "deletions": 10
          }
        ]
      },
      {
        "insertions": 1,
        "deletions": 1,
        "date": "2019-06-28",
        "commitResults": [
          {
            "hash": "d09194c65d9016c56dfc11d341b91cde5c0d1503",
            "messageTitle": "[#741] Fix view code icon not opening CodeView (#744)",
            "messageBody": "The splitCommitsWeek() method executes a dateRounding() method that \r\nrounds up the filterSinceDate to the next nearest Monday. When the \r\nreport page is reloaded, the filterSinceDate is set to the value of \r\nthe \u0027since\u0027 hash by the getDates() method. Since within the \r\ngetFiltered() method, splitCommitsWeek() is executed before\r\ngetDates(), the filterSinceDate stores an empty string which is \r\npassed to the dateRounding() method and returns a NaN value. \r\n\r\nSince splitCommitsWeek() method is only called when granularity is \r\n\u0027week\u0027, if users were to set granularity as \u0027week\u0027 and reload the page,\r\nclicking on the view code icon does not open the CodeView panel. \r\n\r\nLet\u0027s shift the getDates() method to be executed before \r\nsplitCommitsWeek() to make sure that splitCommitWeek() method\r\nis called with a valid filterSinceDate, which fixes the described bug.",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 2,
        "deletions": 2,
        "date": "2019-06-29",
        "commitResults": [
          {
            "hash": "63ca0a11c8351729866d181a152742b2333c987d",
            "messageTitle": "[#680] Vue: fix error message in development mode (#742)",
            "messageBody": "An error message stating \"error compiling template: - \u003ctemplate\u003e\r\ncannot be keyed. Place the key on real elements instead.\" was found in\r\nChrome browser\u0027s console when running Vue in development mode for our\r\nreport.\r\n\r\nAlthough the Vue development tool still functions correctly, it \r\nhighlights an issue with the existing style and possibility degrades \r\nthe efficiency of the operations.\r\n\r\nLet\u0027s remove the Chrome browser console error by shifting the binding \r\nof keys from the \u003ctemplate\u003e tag to the inner \u003clabel\u003e tag.",
            "insertions": 2,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 38,
        "deletions": 11,
        "date": "2019-07-03",
        "commitResults": [
          {
            "hash": "651df45df4d9a91cf5557aabc030c309e93f20de",
            "messageTitle": "[#770] Add placeholder for repositories with no author found (#777)",
            "messageBody": "Repositories with no author specified in the configuration files as\r\nwell as no commits made during the specified period do not appear in\r\nthe report.\r\n\r\nThis is caused by a TypeError in JavaScript. When an author\r\nconfiguration can\u0027t be found for a repository, RepoSense will perform\r\nthe identification of the authors using the commits. However, in the\r\nevent that even commits cannot be found, author information will not be\r\navailable and result in the error stated above.\r\n\r\nAs users may not notice the disappearance of these repositories, let\u0027s\r\nadd a placeholder with an error message of \u0027NO AUTHOR WITH COMMITS\r\nFOUND WITHIN THIS PERIOD OF TIME\u0027 to the affected repositories to\r\ninform users of the occurrence of this error.",
            "insertions": 38,
            "deletions": 11
          }
        ]
      },
      {
        "insertions": 69,
        "deletions": 72,
        "date": "2019-07-04",
        "commitResults": [
          {
            "hash": "61be4e20b1af8e9eb1832fa5afa89bf7fe155f5a",
            "messageTitle": "[#312] CodeView: reduce space taken by toggle icon (#773)",
            "messageBody": "The toggle icon that separates between untouched and touched code \r\nsegments within the CodeView takes up significant amount of extra space.\r\n\r\nThe extra white space causes the code to be in a different layout than \r\nits actual layout.\r\n\r\nLet\u0027s place the toggle icon on the side of the code to not disrupt the \r\nlayout of the code while saving the extra space taken by the current\r\ntoggle icon.",
            "insertions": 69,
            "deletions": 72
          }
        ]
      },
      {
        "insertions": 29,
        "deletions": 7,
        "date": "2019-07-10",
        "commitResults": [
          {
            "hash": "e3dc5d13cd231f26062bcc9fd5cf22ffaed32b9d",
            "messageTitle": "[#748] Restore authorship tab (#749)",
            "messageBody": "Reloading the report page with the authorship tab opened will result\r\nto a closed authorship tab.\r\n\r\nThe info.name property is only created when clicking on the view code\r\nicon and calling openTabAuthorship() method of v_summary. The\r\ninitiate() method of v_authorship sets the isTabActive property to be \r\nfalse if info.name property does not exist. Reloading the report page \r\ndoes not call openTabAuthorship(), which means that the info.name \r\nproperty will not exist and the isTabActive is false regardless of \r\nurl value.\r\n\r\nLet\u0027s modify the initiate() method of v_authorship.js to check for\r\ninfo.author property instead of info.name as the property exists \r\nwhen reloading the page as well as clicking on the view code icon.\r\nThis modification properly restores the last viewed authorship tab, \r\nif any.",
            "insertions": 29,
            "deletions": 7
          }
        ]
      },
      {
        "insertions": 2,
        "deletions": 5,
        "date": "2019-07-14",
        "commitResults": [
          {
            "hash": "d45513d6692248bfa38808e3b045b4ce51039c0c",
            "messageTitle": "[#791] CodeView: bugfix for unexpected colors in line numbers (#792)",
            "messageBody": "The css property of line number only overwrites the color property of \r\nclasses \u0027hljs-number\u0027 and \u0027hljs-comment\u0027. Others classes such as\r\n\u0027hljs-quote\u0027, \u0027hljs-name\u0027 and more are not overwritten.\r\n\r\nThis will cause the color property of certain line numbers to inherit \r\nfrom the hljs classes that are not overwritten.\r\n\r\nLet\u0027s overwrite all hljs classes to ensure the color property of the \r\nline number to always be grey.",
            "insertions": 2,
            "deletions": 5
          }
        ]
      },
      {
        "insertions": 17,
        "deletions": 2,
        "date": "2019-07-17",
        "commitResults": [
          {
            "hash": "255907108d29f67d4a08b91d36c8fe9a8368e7aa",
            "messageTitle": "ChartView: highlight error messages in red (#790)",
            "messageBody": "Within ChartView, ramp charts with error messages are blended together \r\nwith the other ramp charts without error messages as they both have \r\nsimilar UI.\r\n\r\nLet\u0027s modify the UI of ramp charts with error messages to use red color \r\nfor their info message font to distinguish itself from other ramp \r\ncharts without error messages.",
            "insertions": 16,
            "deletions": 2
          },
          {
            "hash": "674f87d83558ccdee29d8aadf42a9647624e2d30",
            "messageTitle": "[#811] CodeView: fix position of toggle icons (#813)",
            "messageBody": "The \u0027closer\u0027 class designated for icons that toggle code segments\r\nis absolutely positioned. Due its parent class, \u0027untouched\u0027, being \r\nin default static position, \u0027closer\u0027 is positioned relatively to the \r\nedges of the root containing block.\r\n\r\nWhen scrolling through horizontally within each code segment, the \r\ntoggle icons remains unchanged in their position in x-axis, hovering \r\nover the text in code view.\r\n\r\nLet\u0027s relatively position the \u0027untouched\u0027 class, which turns the class \r\ninto a containing block. This ensures absolutely positioned elements \r\ncontained within will be positioned relative to the edges of \u0027untouched\u0027\r\nrather than the root containing block. ",
            "insertions": 1,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 773,
        "deletions": 752,
        "date": "2019-07-18",
        "commitResults": [
          {
            "hash": "e8bf034aaf33fa1a59c8933ffaa22dfdf82048fb",
            "messageTitle": "[#522] Implement style checker on .scss files (#803)",
            "messageBody": "RepoSense currently has CheckStyle and ESLint to check our java and \r\njavascript code styles automatically. However, .scss files are not \r\ncovered by any of these tools.\r\n\r\nLet\u0027s implement stylelint to check the code styles of .scss files.",
            "insertions": 773,
            "deletions": 752
          }
        ]
      },
      {
        "insertions": 11,
        "deletions": 1,
        "date": "2019-07-20",
        "commitResults": [
          {
            "hash": "174d06f15417b6feb7fc44bc608a478518a66b34",
            "messageTitle": "[#764] Toolbar: fix search functionality for Safari users (#797)",
            "messageBody": "The \u0027enter\u0027 key submits html forms in browsers such as Chrome and \r\nFirefox, but not in Safari.\r\n\r\nSince the getFiltered() method is executed on submit of the html form,\r\nSafari browser users are unable to activate the search functionality \r\nwhen search value is keyed in and \u0027enter\u0027 key is pressed.\r\n\r\nLet\u0027s move the execution of getFiltered() method to be within \r\nupdateFilterSearch(), to ensure that Safari users are also able to \r\nactivate the search functionality.",
            "insertions": 2,
            "deletions": 1
          },
          {
            "hash": "f6520543bcb0c7ef1d0365a74a87958caca89e92",
            "messageTitle": "[#763] v_summary.js: remove redundant calls to getFiltered() (#800)",
            "messageBody": "When reloading the report page, the data in v_summary such as\r\nfilterSinceDate, filterUntilDate, filterTimeFrame etc will change based \r\non the URL hash values. The changes in data will trigger the watchers \r\nfor those data, and each of them will call getFiltered() method.\r\n\r\nOnly one call for getFiltered() is required after rendering the filter \r\nhash, the other getFiltered() calls by the watchers are redundant.\r\nWhen the report is large in size, repeatedly executing getFiltered()\r\nwhen reloading the report will also significantly affect the loading \r\nperformance of our report.\r\n\r\nLet\u0027s only allow watchers to execute getFiltered() after the first \r\ncycle of watcher updates to prevent redundant calls to getFiltered().",
            "insertions": 9,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 49,
        "deletions": 26,
        "date": "2019-07-22",
        "commitResults": [
          {
            "hash": "c8f248d9283fe86270e1f2906a7812882742bff2",
            "messageTitle": "[#724] Modify zoom-in feature to based on selected granularity (#729)",
            "messageBody": "The zoom-in feature opens the zoom panel to show the selected\r\nsub-range of a ramp chart in terms of \u0027commit\u0027. This feature, however, \r\nonly works when the granularity is set to commit or day.\r\n\r\nUsers will not be able to use this feature with granularity set to week,\r\nas the method getUserCommits() gets all user commits by interating \r\nthrough an undefined key object \u0027dayCommits\u0027, which stops the method\r\nexecution.\r\n\r\nMoreover, long sub-range of ramp charts will contain dense information \r\nwith ramp slices overlapping each other. This happens even when \r\ngranularity is set to day or week, which makes it difficult for users to \r\nnotice substantial info on these ramp charts.\r\n\r\nLet\u0027s correctly implement the zoom-in feature when granularity is set to\r\nweek. Furthermore, let\u0027s modify the feature for the ramp chart within \r\nzoom panel to be in terms of the granularity selected, which allow users \r\nto observe selected granularity of commits more clearly within the \r\nzoomed-in range.",
            "insertions": 42,
            "deletions": 19
          },
          {
            "hash": "eb0e20f6cfda5485770df37e8f387082452d88c7",
            "messageTitle": "[#780] v_summary.js: remove Vue watcher for repos (#783)",
            "messageBody": "A redundant Vue watcher was found in v_summary.js, specifically the Vue\r\nwatcher for repos, as repos should remain constant and not be modified.\r\n\r\nThis is primarily used to call the getUsers() method, however this \r\nitself is redundant as getUsers() shouldn\u0027t be called more than once \r\nas it tends to overwrite repos with the same set of values.\r\n\r\nAdditionally, using Vue watcher for large data, such as repos, affects \r\nthe performance of the report.\r\n\r\nLet\u0027s remove the Vue watcher for repos and modify getUsers() to be \r\ncalled only once when page is firstly loaded.",
            "insertions": 6,
            "deletions": 6
          },
          {
            "hash": "790840f5c3130b829cb655609d5e481b5932991d",
            "messageTitle": "[#820] Cypress: add sinceDate in command arguments (#821)",
            "messageBody": "The arguments used to generate the sample report used in Cypress \r\ntests is \u0027--repo https://github.com/reposense/RepoSense.git --view\u0027. \r\n\r\nSince sinceDate and untilDate is not provided in the arguments, the \r\nreport duration will be from one month before today\u0027s date until\r\ntoday\u0027s date. This causes the current sample report used for Cypress\r\ntests to contain empty ramp charts, which does not mimic a realistic\r\nreport.\r\n\r\nLet\u0027s add a \u0027--since d1\u0027 argument to the existing arguments, which \r\ngenerates a more realistic sample report that contains the commits\r\nmade from start until today\u0027s date.",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 0,
        "deletions": 9,
        "date": "2019-07-24",
        "commitResults": [
          {
            "hash": "1378e60b66d2493595efc17eae763327d266faa8",
            "messageTitle": "[#828] Revert \"v_summary.js: remove redundant calls to getFiltered() (#800)\" (#832)",
            "messageBody": "PR #800 was intended to ensure the getFiltered() method to be executed \r\nonly once when the page is reloaded. The solution used was to set \r\nboolean canGetFiltered to true in beforeUpdate() lifecycle hook, \r\npreventing the execution of getFiltered() before the lifecycle hook.\r\nHowever, the beforeUpdate() lifecycle hook will only be executed when \r\nthere are changes to the DOM. \r\n\r\nInstances where the page is reloaded and there are no changes to the DOM\r\nwill not set boolean canGetFiltered to true, preventing getFiltered() to \r\nbe executed until the DOM has changed.\r\n\r\nLet\u0027s revert PR #800 to allow getFiltered() to be executed even when \r\nthere are no changes to the DOM.",
            "insertions": 0,
            "deletions": 9
          }
        ]
      },
      {
        "insertions": 32,
        "deletions": 18,
        "date": "2019-07-27",
        "commitResults": [
          {
            "hash": "6873b4e5d289f1c898118a607c2c4b1e65c67e70",
            "messageTitle": "[#809] DeveloperGuide: update the HTML report section (#810)",
            "messageBody": "The HTML report section in our DG contains outdated info such as the\r\nreport summary diagram, sequence diagrams and the list of js files.\r\n\r\nLet\u0027s perform promptly due update, revise the HTML report section with\r\nthe latest report summary diagram, Vue lifecycle diagram, sequence\r\ndiagrams and the descriptions of the recently added js files such as\r\nv_ramp, v_zoom, and v_segment.",
            "insertions": 32,
            "deletions": 18
          }
        ]
      },
      {
        "insertions": 105,
        "deletions": 15,
        "date": "2019-07-28",
        "commitResults": [
          {
            "hash": "8f7db355698cb2430b536c32557339c357607378",
            "messageTitle": "[#723] Report: fix modifying dates for Safari users (#801)",
            "messageBody": "Safari browser users are unable to modify sinceDate and untilDate in\r\nthe report.\r\n\r\nThis is due to the datepickers used are HTML5 elements; they are not\r\nsupported by Safari. Furthermore, the alternative to modify the date\r\nfields, through the keydown events, are disabled.\r\n\r\nLet\u0027s allow Safari browser users to use a text-type input for their\r\nsinceDate and untilDate inputs. They can modify the dates by\r\nkeying the numeric date values into the date fields followed by hitting\r\nthe key, `enter`.",
            "insertions": 84,
            "deletions": 4
          },
          {
            "hash": "acc66d3caae0072397b592eebe20aa6b6863b227",
            "messageTitle": "[#778] ChartView: add zoom tab button (#796)",
            "messageBody": "In addition to zooming into a range of ramp slices, the zoom tab also\r\nshows the breakdown of commits that are within the zoom range. This \r\nfunctionality however, is not encompassed for the entire ramp chart.\r\n\r\nLet\u0027s add a button that opens the zoom tab for the entire ramp chart.",
            "insertions": 21,
            "deletions": 11
          }
        ]
      },
      {
        "insertions": 334,
        "deletions": 118,
        "date": "2019-07-31",
        "commitResults": [
          {
            "hash": "80a592516d07d23a54932a78209bca9f0bc1a498",
            "messageTitle": "[#662] ChartView: add merge group option (#752)",
            "messageBody": "Within ChartView, a group has multiple rows of ramp charts that belongs\r\nto the group itself.\r\n\r\nIt may be difficult for users to analyse the contribution of the entire\r\ngroup or to compare the contribution between groups.\r\n\r\nLet\u0027s add a merge group checkbox such that when the checkbox is\r\nchecked, all ramp charts of the same group will be merged together\r\nto form a single ramp chart. This allows users to easily analyse \r\nthe total contribution on the group level.",
            "insertions": 131,
            "deletions": 26
          },
          {
            "hash": "42b6b574f474cf6aed2acfc24bf2142a487d768e",
            "messageTitle": "[#846] CodeView: fix show ramps for this period button (#847)",
            "messageBody": "Clicking on show ramp chart for this period button in the commits\r\npanel calls updateDateRange(), which recomputes the duration of the\r\nramp chart according to the drags by the user. The method proceeds \r\nto call deactivateAllOverlays(), which removes the drags by the user.\r\n\r\nSince no more drags are left after the first execution of \r\nupdateDateRange(), clicking on the show ramp chart for this period\r\nbutton will not be able to activate updateDateRange().\r\n\r\nLet\u0027s use the zoom since date and until date to recompute the duration\r\nof the ramp chart, instead of using the drags. This will ensure that\r\nclicking on the button will always show the ramp chart for the \r\ndesignated period.",
            "insertions": 7,
            "deletions": 16
          },
          {
            "hash": "9018b9073abfea6c10609b96b0d85e4d99ccaf97",
            "messageTitle": "[#839] Set config to be inclusive of until date (#840)",
            "messageBody": "The until date in the config does not match with the until date used in\r\ngit rev-list. Until date in the config is in 00:00:00 time whereas\r\nuntil date used in git rev-list uses the time 23:59:59 of the day\r\nbefore.\r\n\r\nThis discrepancy can cause the content and author of each line detected\r\nby git rev-list to be different, and have caused a disparity in the\r\noutput results in #789.\r\n\r\nLet\u0027s standardise the until date in the config to use time of 23:59:59 \r\nto match with the until date used in git rev-list.\r\n\r\nReference:\r\nhttps://github.com/reposense/RepoSense/pull/789#discussion_r307350220",
            "insertions": 111,
            "deletions": 39
          },
          {
            "hash": "1c3bcf6e6fe863f4e06a1605d718659594e491b7",
            "messageTitle": "[#754] Url: include date hashes only when modified (#757)",
            "messageBody": "The initial URL of the report page captures a start and until \r\nhash parameter even when the users did not specify the start date\r\nand end date fields in the CLI.\r\n\r\nThe URL is then shared to others. If there are further updates to the \r\nreport, the URL will still navigate to the report page with ramps up \r\nuntil the original start date and until date instead of the most\r\nupdated dates which may include more recent/older commits.\r\n\r\nLet’s modify the report’s initial URL to not capture the start and end \r\ndate hashes when users did not specify the respective date field in\r\nthe CLI. Without the start date or end date hash parameter in the URL,\r\nthe URL will navigate to the report with the most updated start date\r\nand end date.",
            "insertions": 77,
            "deletions": 27
          },
          {
            "hash": "06c5a05d9256dbd53c2565228226b9556555afa0",
            "messageTitle": "[#842] Fix out of bound ramp slices (#844)",
            "messageBody": "Ramp slices appear outside of the ramp charts in week granularity.\r\n\r\nThis is due to the implementation of splitCommitsWeek() does not take\r\ninto account when the duration between since date and until date is\r\nless than one week. When the duration is less than a week, the\r\nalgorithm calculates commits up to the following Monday, even if they\r\nare beyond the until date. Hence, it causes a distortion in the ui.\r\n\r\nLet\u0027s revamp the logic within splitCommitsWeek to check, and trim any\r\ncommits beyond the until date.",
            "insertions": 8,
            "deletions": 10
          }
        ]
      },
      {
        "insertions": 53,
        "deletions": 30,
        "date": "2019-08-01",
        "commitResults": [
          {
            "hash": "7ff4d5de6c6a3f3103d526cfeaeff8c38f137ec1",
            "messageTitle": "Zoom Tab: revamp header ui (#848)",
            "messageBody": "The zoom tab header remains the same irregardless of the grouping\r\noption (authors, repos or none). The period of the zoom tab is also not\r\nshown in the zoom tab.\r\n\r\nThis creates a problem when the merge group option is used; a merged\r\ngroup may consists of more than one chart, and the title used in the\r\nheader might not apply to all the ramps within the merged chart.\r\n\r\nLet\u0027s modify the UI of the zoom tab title to use a new sequence:\r\n`group title` -\u003e `chart title` -\u003e `period of zoom tab` -\u003e\r\n`granularity`, and hide the chart title when the merge group option is\r\nchecked.\r\n\r\nLet\u0027s also modify the authorship\u0027s title format to match with the zoom\r\ntab\u0027s title format as well.",
            "insertions": 53,
            "deletions": 30
          }
        ]
      },
      {
        "insertions": 17,
        "deletions": 4,
        "date": "2019-08-09",
        "commitResults": [
          {
            "hash": "6dc9ee3595b1c98c28b32339715fe8b5295cd953",
            "messageTitle": "[#851] Fix url directing to wrong repository when merge group (#854)",
            "messageBody": "When the merge group option is checked, charts are grouped by\r\nauthors and granularity is set to \u0027commit\u0027, the url of some commits \r\nmay point to the wrong repository.\r\n\r\nThis is due to our current structure of the merged groups, where each\r\nmerged author stores only one repository name even though they may \r\nhave contributed to more than one repository. This causes all url \r\nof commits to point to the same repository.\r\n\r\nLet\u0027s bind the repository name to each commit when merge group \r\noption is checked to ensure that all url of commits point to the \r\ncorrect repository.",
            "insertions": 17,
            "deletions": 4
          }
        ]
      },
      {
        "insertions": 2,
        "deletions": 2,
        "date": "2019-09-01",
        "commitResults": [
          {
            "hash": "8e0a89e06225aa5f8d58e0586082f2e811fe24fb",
            "messageTitle": "ChartView: modify the sorting of the authors to use display names (#880)",
            "messageBody": "The sorting of the author by title is according to the authors\u0027 \r\nGitHub usernames.\r\n\r\nGithub usernames are strings that users have no control over, \r\nan unconfigurable field. Therefore, sorting according to it does not\r\nhave much value to the user, should she chose to configure the display\r\nnames.\r\n\r\nLet\u0027s modify the sorting of author names to be according to the\r\nauthors\u0027 display names.",
            "insertions": 2,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 22,
        "deletions": 14,
        "date": "2019-09-05",
        "commitResults": [
          {
            "hash": "816bb1a856387ca848504ae279bc2a4b81f4a308",
            "messageTitle": "[#858] Restore authorship tab (#874)",
            "messageBody": "Authorship tab is not restorable after refreshing the page.\r\n\r\nRestoring authorship tab requires the since and until date hashes \r\nwhereas PR #757 has made changes where the date hashes will not \r\nbe captured in the URL if not specified by the user.\r\n\r\nLet\u0027s \r\n- use the window\u0027s since and until date to restore the authorship \r\n  tab if the date hashes are unavailable. \r\n- move the restoring of tab hashes to be executed after \r\n  loadSummary() to ensure that the window\u0027s since and until date is \r\n  available.\r\n- extract the deactivation of tab pane to a method instead of using\r\n  the updated hook as the updated hook will be called repeatedly \r\n  whenever there are data changes that affect the DOM.\r\n",
            "insertions": 22,
            "deletions": 14
          }
        ]
      },
      {
        "insertions": 43,
        "deletions": 0,
        "date": "2019-12-20",
        "commitResults": [
          {
            "hash": "008f48fc20af630d857cd65bf11e96d05e19559a",
            "messageTitle": "[#46] Show total time after batch processing (#758)",
            "messageBody": "After running the CLI command, the total time taken to process and \r\ngenerate the report is not shown in the console output.\r\n\r\nUsers might find it useful to keep track of the time taken to \r\ngenerate the report.\r\n\r\nLet\u0027s use the logger to output the total time taken from running the \r\nCLI command until the report is generated.\r\n",
            "insertions": 43,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 49,
        "deletions": 42,
        "date": "2019-12-31",
        "commitResults": [
          {
            "hash": "2b2a9f3666d7c14d0c0ebe05b26660d0bf7827ba",
            "messageTitle": "[#785] ChartView: fix authors with unaccounted lines (#789)",
            "messageBody": "The git blame command used in RepoSense contains the option -w, which\r\nignores whitespace when comparing the parent’s version and the child’s\r\nto find where the lines came from.\r\n\r\nWhen an author did not change the content but only the position of\r\nspecific lines of code, the previous author will be recognised as the \r\nauthor that changed these lines. If the previous author did not\r\ncontribute during the analysis period, his/her ramp chart will be\r\nempty while the contribution bar will be present.\r\n\r\nLet\u0027s add an extra check in aggregateBlameInfo for lines of code with\r\nthe author committed date that is not within the duration of \r\nspecified since date and until date. Those lines of code\u0027s author will\r\nbe set to unknown, which will resolve the issue above.",
            "insertions": 49,
            "deletions": 42
          }
        ]
      },
      {
        "insertions": 107,
        "deletions": 10,
        "date": "2020-01-22",
        "commitResults": [
          {
            "hash": "e2f1ec8fffe7ed8140bc9af968f7d26582a67fdd",
            "messageTitle": "[#879] Display commit tags in commits panel (#969)",
            "messageBody": "The tags of each commit are not shown in the commits panel.\r\n\r\nWith the active use of git tags in CS21x3 repositories, it is useful to \r\nprovide tutors on the usage and information of tags in each commit.\r\n\r\nLet\u0027s display the tags of each commit (if there\u0027s any) in the commits \r\npanel.",
            "insertions": 107,
            "deletions": 10
          }
        ]
      },
      {
        "insertions": 4,
        "deletions": 4,
        "date": "2020-01-29",
        "commitResults": [
          {
            "hash": "8ed76d0dfebad2e509d87879661501239c35acb9",
            "messageTitle": "[#984] Fix miscalculation of expanded commit message count (#998)",
            "messageBody": "We get the number of expanded commit message count in zoom tab based on\r\nthe number of divs with class name \u0027commit-message active\u0027.\r\n\r\nCommit messages without commit message bodies also have default class\r\nname of \u0027commit-message active\u0027, which leads to the expanded commit\r\nmessage count to not reflect on the true number of commit messages that\r\nare expanded.\r\n\r\nLet\u0027s append the class name \u0027message-body\u0027 to commit messages that have\r\ncommit message bodies, to distinguish between messages that can be\r\nexpanded and vice versa.\r\n",
            "insertions": 4,
            "deletions": 4
          }
        ]
      },
      {
        "insertions": 1,
        "deletions": 0,
        "date": "2020-02-02",
        "commitResults": [
          {
            "hash": "644af05f28207975cb22771cb5f44a25a0ff90e4",
            "messageTitle": "[#1029] Contribution Bar: restore the float left property (#1030)",
            "messageBody": "Due to the regression of #1003, the css property \u0027float: left\u0027 was left\r\nout in the contribution bar. When break down by file type is checked,\r\nthe contribution bar for each file type occupies separate lines\r\ninstead of continuous lines.\r\n\r\nLet\u0027s restore the css property \u0027float: left\u0027 back to the contribution\r\nbar.",
            "insertions": 1,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 29,
        "deletions": 5,
        "date": "2020-02-05",
        "commitResults": [
          {
            "hash": "ebdd0140fe77d238eab878b42d58afe18fd03e02",
            "messageTitle": "[#1019] Handle commit info extraction for empty commits (#1020)",
            "messageBody": "Analyzing repo with empty commits causes CommitInfoAnalyzer to throw \r\nArrayIndexOutOfBoundsException. This occurs in \r\nCommitInfoExtractor#parseGitLogResults, where info lines and stat \r\nlines are split based on the last index of the newline character \r\n`\\n`.\r\n\r\nAs empty commits have no stat lines, it leads to \r\nArrayIndexOutOfBoundsException due to the use of new line separator.\r\n\r\nLet\u0027s:\r\n- use \u0027|\u0027 character as the splitting point of info lines and stat \r\n  lines, instead of the new line \u0027\\n\u0027 character. This will ensure \r\n  that the ref name details will always be within info lines instead\r\n  of stat lines.\r\n- add a check for the availability of the ref name before accessing \r\n  it to prevent the exception. \r\n\r\nNo stat lines occurs for commits that are empty (done by git commit \r\n--allow-empty), since no files are changed. The last index of the \r\nnewline character will situate before the ref name details, and info\r\nline will contain all characters before that index while stat line \r\ncontains the ref name details. Since the ref name is no longer in \r\nthe info lines, accessing the REF_NAME_INDEX within the info lines \r\nwill incur an ArrayOutOfBoundsException.\r\n",
            "insertions": 27,
            "deletions": 3
          },
          {
            "hash": "4611767400fc829913997f335afa5aed22917cd8",
            "messageTitle": "[#1027] Modify UI for tags (#1028)",
            "messageBody": "Some tags split to the next line when the list of tags are too long. \r\nTags also appear vertically close together when the list occupies \r\nmore than one line.\r\n\r\nLet\u0027s change the css property `display` to be `inline-block` and add \r\nsome top and bottom margins to each tag.\r\n",
            "insertions": 2,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 27,
        "deletions": 26,
        "date": "2020-02-22",
        "commitResults": [
          {
            "hash": "636f4d98583c49c18dc25fe66b0c4d196ad05271",
            "messageTitle": "[#999] Remove empty zoom__day divs (#1000)",
            "messageBody": "When granularity is set to week, the \u0027pushCommitsWeek\u0027 method gets \r\nall possible weeks (week 1, 2, 3, etc...) from start date until the \r\nend date and pushes it to \u0027user.commits\u0027, no matter the week has any \r\ncommits at all. Additionally, commits with zero insertions but with \r\ndeletions are also not taken into consideration in the commits \r\npanel.\r\n\r\nWeeks that have no commits is not useful and redundant. Commits with\r\nonly deletions are maybe useful as it may represent \r\nrefactoring/removing redundant code.\r\n\r\nLet\u0027s add a check to add a week only if it has commits. And remove \r\nthe check for commits with zero insertions, so that commits with \r\nonly deletions are also included.",
            "insertions": 27,
            "deletions": 26
          }
        ]
      },
      {
        "insertions": 1,
        "deletions": 1,
        "date": "2020-02-26",
        "commitResults": [
          {
            "hash": "a9f88fd727d8127f36ef6e33eaef81fb10338220",
            "messageTitle": "[#1043] Fix bug of incorrect commit dates when merge group (#1045)",
            "messageBody": "When merge group is checked, some commits are seen with committed\r\ndates that are incompatible to the real committed dates.\r\n\r\nCommits with the same date are appended together in \u0027mergedCommits\u0027.\r\nSince \u0027mergedCommits\u0027 is being sorted before all the merged commits \r\nfor a particular group is gathered, the order of the \u0027mergedCommits\u0027 \r\nis changed, and some commits with the same date are appended \r\nwrongly.\r\n\r\nLet\u0027s move the sorting of \u0027mergedCommits\u0027 after the all merged \r\ncommits are gathered, this will ensure commits with the same date \r\nare appended correctly.\r\n\r\nThe order of the \u0027mergedCommits\u0027 matters, as we use an additional js \r\nobject \u0027dateToIndexMap\u0027 maps dates to the corresponding index in \r\n\u0027mergedCommits\u0027. Once the order has changed, the \u0027dateToIndexMap\u0027 no \r\nlonger contains the accurate mappings and hence, commits are \r\nappended wrongly.\r\n",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 39,
        "deletions": 2,
        "date": "2020-03-04",
        "commitResults": [
          {
            "hash": "9725a25d4e34164cefbb51f7f6e39964cb0a521a",
            "messageTitle": "Add commit message length configuration border (#1048)",
            "messageBody": "GitHub\u0027s maximum length of commit message\u0027s subject line and body is \r\ndefaulted at 50 and 72 characters respectively.\r\n\r\nCommits panel does not show the indication of the maximum lengths.\r\n\r\nLet\u0027s add a dotted lines for commit message bodies at 72 characters \r\nand subject lines at 50 characters, these lines indicate whether a \r\ncommit message\u0027s subject line or body exceed GitHub\u0027s maximum \r\nlength.\r\n",
            "insertions": 39,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 7,
        "deletions": 2,
        "date": "2020-03-09",
        "commitResults": [
          {
            "hash": "145a1b4dda02ac9fdc42554835e7be98a534b0a0",
            "messageTitle": "[#1005, #1010] Code Panel: match font with GitHub and break lines when overflow (#1008)",
            "messageBody": "When the file path or lines of code overflows, it takes up a large \r\namount of empty space in order to accomodate to it\u0027s length. The \r\nfont size of the code and file path is also rather big and takes up \r\nmuch space.\r\n\r\nLet\u0027s set the file path and lines of code to break into next lines \r\nwhen it overflows. Also, let\u0027s set the font-family and font-size of \r\nthe code to match with GitHub.",
            "insertions": 7,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 2,
        "deletions": 0,
        "date": "2020-03-16",
        "commitResults": [
          {
            "hash": "e42884b81029c9a2c221448bdc86d570d8774511",
            "messageTitle": "[#1140] Update date hashes when updating date range (#1141)",
            "messageBody": "Clicking on the `show ramp chart in this period` button does not update \r\nthe `since` and `until` date hashes, which leads to a different summary \r\nperiod after reloading the page.\r\n\r\nThis is due to the `hasModifedSinceDate` and `hasModifiedUntilDate` not\r\nset to true when calling `updateDateRange`, which prevents the since and \r\nuntil date hashes to be updated.\r\n\r\nLet\u0027s set `hasModifedSinceDate` and `hasModifiedUntilDate` to be true \r\nwhen updateDateRange is called.",
            "insertions": 2,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 10,
        "deletions": 15,
        "date": "2020-03-17",
        "commitResults": [
          {
            "hash": "53fe9f408e25a058f9f2d7c3f38e416df98022c8",
            "messageTitle": "v_summary: refactor the structure of summary-charts__title (#1106)",
            "messageBody": "The `summary-charts__title` div is separated in two, each for when\r\n`filterGroupSelection` is `groupByRepos` and `groupByAuthors` \r\nrespectively.\r\n\r\nThere is overlapping in code among the two, and adding a new \r\ncommon component in `summary-charts__title` needs to be done twice, \r\nwhich is redundant.\r\n\r\nLet\u0027s refactor the structure `summary-charts__title` div to share \r\nthe common divs/components.",
            "insertions": 10,
            "deletions": 15
          }
        ]
      }
    ],
    "yamidark": [
      {
        "insertions": 213,
        "deletions": 262,
        "date": "2018-05-31",
        "commitResults": [
          {
            "hash": "555d0caa633c1037a913857ec17d521a93c3e95b",
            "messageTitle": "[#107] Shift from File to Path class (#114)",
            "messageBody": "java.nio.file.Path is able to do everything java.io.File can and\r\ngenerally in a better way.This is supported by the document posted on\r\nthe website:\r\nhttps://docs.oracle.com/javase/tutorial/essential/io/legacy.html.\r\n\r\nLet\u0027s move towards to using Path as a replacement to File whenever we\r\ncan for better exception handling and OS invariant coding.",
            "insertions": 213,
            "deletions": 262
          }
        ]
      },
      {
        "insertions": 36,
        "deletions": 42,
        "date": "2018-06-04",
        "commitResults": [
          {
            "hash": "b7bab4cea243aca7ea857d49d7c3935ee1e276c0",
            "messageTitle": "Improve performance (#126)",
            "messageBody": "The analyzing of contribution for each file in the program is very\r\nslow due to several factors:\r\n1. The `git blame` process produces a lot of unnecessary line\r\ninformation, causing a large amount of unnecessary time spent reading\r\nI/O. \r\n2. StreamGobbler uses String concatenation when reading from process\r\nInputStream, which is polynomial in time based on the number of lines.\r\n\r\nLet\u0027s improve performance of the program and functional test by:\r\n1. Filter the `git blame` process output using `findstr` in Windows OS\r\nor `grep` for other OS, thus having a smaller I/O to read.\r\n2. Change StreamGobbler to read directly from InputStream instead of\r\nusing a BufferedReader, and use StringBuilder instead of String\r\nconcatenation.",
            "insertions": 36,
            "deletions": 42
          }
        ]
      },
      {
        "insertions": 1047,
        "deletions": 936,
        "date": "2018-06-22",
        "commitResults": [
          {
            "hash": "87571e26e9792c62b602b2760906db234b68b3c7",
            "messageTitle": "[#69] Architecture: apply separation of concern to multiple classes (#147)",
            "messageBody": "Classes such as GitBlamer have multiple responsibilities,\r\ngenerating the FileInfo, analyzing of the git blame results and setting\r\nauthorship of each line in the file.\r\n\r\nThis leads to lots of coupling due to violation of Single Responsibility\r\nPrinciple.\r\n\r\nLet\u0027s split the responsibility of generation and analyze of authorship\r\nand commit info into different classes.",
            "insertions": 1047,
            "deletions": 936
          }
        ]
      },
      {
        "insertions": 5,
        "deletions": 5,
        "date": "2018-06-26",
        "commitResults": [
          {
            "hash": "978ec5d5ca50ed96529ce1fb5057563849224fa9",
            "messageTitle": "[#131] Redirect functional test to use testrepo (#133)",
            "messageBody": "Functional is performing the test on repositories that are beyond our\r\ncontrol.\r\n\r\nThis means that if the repositories\u0027 owners make any changes to their\r\nrepository, it will affect our test results.\r\n\r\nLet\u0027s use the state-preserved, forked repositories under our\r\norganization instead.",
            "insertions": 5,
            "deletions": 5
          }
        ]
      },
      {
        "insertions": 128,
        "deletions": 170,
        "date": "2018-07-08",
        "commitResults": [
          {
            "hash": "9bc31f82fe9594b54c77b780f5d670e595cbf1f7",
            "messageTitle": "Update developer guide (#151)",
            "messageBody": "After PRs #95 #99 #111 and #147, the Developer Guide is now out of\r\ndate with the code base\u0027s architecture.\r\n\r\nThe dependency on git written also does not specify the version\r\nrequired.\r\n\r\nLet\u0027s update the Developer Guide with the architecture changes,\r\nadd a diagram of the proposed final architecture and update the\r\nversion dependency on git.",
            "insertions": 128,
            "deletions": 170
          }
        ]
      },
      {
        "insertions": 3,
        "deletions": 4,
        "date": "2018-07-10",
        "commitResults": [
          {
            "hash": "f758253fdba88fd3fecd00d082bba202faaa0025",
            "messageTitle": "Fix link in README and dependency notes in UserGuide (#175)",
            "messageBody": "Due to renaming of developer_guide.md to DeveloperGuide.md \r\nand user_guide.md to UserGuide.md, the links in README.md leading\r\nto those two documents are now broken.\r\n\r\nLet\u0027s fix those broken links.",
            "insertions": 3,
            "deletions": 4
          }
        ]
      },
      {
        "insertions": 64,
        "deletions": 12,
        "date": "2018-07-12",
        "commitResults": [
          {
            "hash": "968c6a8565bf5a66d18570a2d52dc7ff567ad7dd",
            "messageTitle": "[#177] Add more default file types to analyze (#178)",
            "messageBody": "RepoSense only tracks \u0027.java\u0027 and \u0027.adoc\u0027 file types for analyse.\r\n\r\nThis may not be sufficient for visualization as not many other projects that\r\nare not mainly coded in Java or use asciidoctor for their documents.\r\n\r\nLet\u0027s include more file types by default in the analysis.",
            "insertions": 64,
            "deletions": 12
          }
        ]
      },
      {
        "insertions": 21,
        "deletions": 3,
        "date": "2018-07-13",
        "commitResults": [
          {
            "hash": "1f222c0fd93fd8c5399a27c18aa03c03871f7cee",
            "messageTitle": "[#182, #183] FileInfoExtractor: decode non-UTF-8 characters (#180)",
            "messageBody": "FileInfoExtractor#generateFileInfo(String, String)\r\nand FileInfoAnalyzer#isReused(String,String) use\r\nFiles#newBufferedReader(Path) to construct the BufferedReader for\r\nreading of files.\r\n\r\nThis constructed BufferedReader uses the default UTF-8 Charset[1]\r\nand a default CharsetDecoder[2] to decode the bytes\r\nread from files into Strings.[3]\r\n\r\nAs some files being analyzed may contain special characters that are\r\nnot from the UTF-8 character set[3], it causes the BufferedReader to\r\nthrow a java.nio.charset.MalformedInputException.\r\n\r\nAs a result, it creates an incomplete FileInfo in\r\nFileInfoExtractor#generateFileInfo(String, String) process, which causes the\r\nprogram to crash when analysing the file in \r\nFileInfoAnalyzer#aggregateBlameAuthorInfo(RepoConfiguration, FileInfo).\r\nThis is due to the number of lines analyzed in git blame being greater than\r\nthe number of lines inside FileInfo. It will also cause the analysis of\r\nsome white-listed files to be skipped inside\r\nFileInfoAnalyzer#isReused(String,String).\r\n\r\nLet\u0027s update FileInfoExtractor#generateFileInfo(String, String)\r\nand FileInfoAnalyzer#isReused(String,String) to construct the\r\nBufferedReader with an java.io.FileReader instead.\r\n\r\nThe java.io.FileReader extends java.io.InputStreamReader,\r\nwhich use the same default UTF-8 Charset. However, it will call \r\nStreamDecoder#forInputStreamReader(InputStream, Object, CharsetDecoder)\r\n, which will set the CharsetDecoder to replace the malformed input\r\ninstead of throwing an error[5], thus allowing the FileInfo to be\r\nconstructed with the correct number of lines.\r\n\r\n[1] Javadocs of Charset:\r\nhttps://docs.oracle.com/javase/8/docs/api/java/nio/charset/Charset.html\r\n\r\n[2] Javadocs of CharsetDecoder:\r\nhttps://docs.oracle.com/javase/8/docs/api/java/nio/charset/CharsetDecoder.html\r\n\r\n[3] Source code of Files.newBufferedReader(Path, Charset):\r\nhttp://hg.openjdk.java.net/jdk8u/jdk8u/jdk/file/be30cb2a3088/src/share/classes/java/nio/file/Files.java#l2780\r\n\r\n[4] Example of a file with non-UTF-8 characters inside:\r\nhttps://github.com/CS2103JAN2018-F11-B4/main/blob/master/collated/functional/ZhangYijiong.md\r\n\r\n[5] Source code of StreamDecoder setting malformed input to be replaced:\r\nhttp://hg.openjdk.java.net/jdk8/jdk8/jdk/file/687fd7c7986d/src/share/classes/sun/nio/cs/StreamDecoder.java#l230",
            "insertions": 21,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 8,
        "deletions": 8,
        "date": "2018-07-19",
        "commitResults": [
          {
            "hash": "9e374e050fbd53de439592162cf8e190fab5f970",
            "messageTitle": "build.gradle: fix output location for jar file (#208)",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "aa36ea50b6bca88b9a0fba38091b7624cc6bc8a8",
            "messageTitle": "[#206] Fix different branches of same repository using same display name (#207)",
            "messageBody": "In the .csv config file, we may supply the same organization\r\nand repository, but different branches for different authors.\r\n\r\nIn CsvParser, these will be separated into two different\r\nRepoConfigurations, and analysis will be run separately, generating\r\nseparate reports.\r\n\r\nHowever, as we set the display name for each RepoConfiguration to\r\nonly be the \u0027organization\u0027 and \u0027repository\u0027, these different\r\nRepoConfigurations will override each other\u0027s report as they are\r\nbeing generated into the same folder.\r\n\r\nLet\u0027s update RepoConfiguration\u0027s display name to include the\r\nbranch as well. This will cause the report to be generated into a\r\ndifferent folder for different branches.",
            "insertions": 7,
            "deletions": 7
          }
        ]
      },
      {
        "insertions": 280,
        "deletions": 30,
        "date": "2018-07-20",
        "commitResults": [
          {
            "hash": "b6d844d42411bb867e865ebc99fb5ebeeefe31d8",
            "messageTitle": "Remove copy move detection for CommandRunner#blameRaw (#212)",
            "messageBody": "The git blame command in CommandRunner#blameRaw(String, String)\r\nuses copy and move detection[1] for its line authorship analysis.\r\n\r\nThese may cause an author\u0027s commit contribution and\r\nhis line contribution count on the dashboard to be inconsistent,\r\nas a the author may have copied or moved lines from another\r\nauthor, which will cause those lines to be authored to the other\r\nauthor instead.\r\n\r\nIf necessary, users may use collate if they wish to identify if\r\ncertain codes belong to them, instead of us trying\r\nto identify the \u0027original\u0027 author by ourselves.\r\n\r\nLet\u0027s remove the copy and move detection in\r\nCommandRunner#blameRaw(String, String) git blame command.\r\n\r\n[1]: Docs on the git blame copy and move detection:\r\nhttps://git-scm.com/docs/git-blame#git-blame--Mltnumgt",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "5b5c645f1a276e06954c85d644dfc75f1276fb6a",
            "messageTitle": "[#203] Authorship: incorrect line authorship when analyzing date range (#205)",
            "messageBody": "When a date range is supplied, the FileInfoAnalyzer will only\r\ngit blame on the range of commits that fall within the given\r\ndate range.\r\n\r\nThis may cause the authorship of certain lines that have not\r\nbeen touched at all during the date range to be incorrectly\r\nauthored to a random author that commited in that date range.\r\n\r\nLet\u0027s update the git blame command to run the git blame from\r\ninitial to the latest commit of that date range. In addition, let\u0027s\r\nalso update FileInfoExtractor to only track lines that were added\r\nwithin the date range, and add them into the final authorship count.",
            "insertions": 279,
            "deletions": 29
          }
        ]
      },
      {
        "insertions": 12,
        "deletions": 3,
        "date": "2018-07-21",
        "commitResults": [
          {
            "hash": "a76a1b4d1492aeb9c8c2662fc9f06d68b21f5c0e",
            "messageTitle": "[#215] Extracting info from git diff is not working as expected (#216)",
            "messageBody": "FileInfoExtractor#getFilePathFromDiffPattern(String) checks\r\nfor the group pattern \u0027+++ b/path/to/file\u0027\r\nwithin the git diff result in order to get the file path.\r\n\r\nHowever, when a new and also empty file is added in between the\r\ncommit range to analysis, the file will appear in the git diff result,\r\nbut since there are no lines to display, the above group does not\r\nget printed, thus \r\nFileInfoExtractor#getFilePathFromDiffPattern(String) is unable\r\nto match the pattern, causing the program to crash.\r\n\r\nLet\u0027s add a check to skip these new and empty files in \r\nthe git diff result, since an empty file has no lines to \r\nattribute any contribution.",
            "insertions": 12,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 145,
        "deletions": 40,
        "date": "2018-07-24",
        "commitResults": [
          {
            "hash": "73e1f10510d89d409fd4609f1be744217760ca37",
            "messageTitle": "[#218] Add support for file exclusion patterns (#229)",
            "messageBody": "RepoSense only accepts an inclusive list of file formats to analyze.\r\n\r\nHowever, users may wish to specifically exclude analyze of some\r\nfiles or folders, such as large data files or test folders, as they may\r\nnot be meaningful to analyze.\r\n\r\nLet\u0027s add back-end support to exclude analyzing of files of specified\r\nglob patterns, which can be done in git log by using pathspec[1].\r\n\r\n[1] Intro to Git\u0027s pathspec:\r\nhttps://kgrz.io/git-intro-to-pathspec.html",
            "insertions": 145,
            "deletions": 40
          }
        ]
      },
      {
        "insertions": 182,
        "deletions": 77,
        "date": "2018-07-26",
        "commitResults": [
          {
            "hash": "41590a93be29d249e3a6b17612a17f4d01de2670",
            "messageTitle": "[#234] Modify analysis of files and commits to be at Author level (#236)",
            "messageBody": "RepoSense only uses Repoconfiguration for the\r\nanalysis of files and commits, causing these analysis\r\nto be on the repo level.\r\n\r\nAs we will be implementing configuration settings for each\r\nindividual author of a repo, the analysis of files and commits\r\nwill also need to be on the author level.\r\n\r\nLet\u0027s update the analysis of files and commits to be on the\r\nauthor level.",
            "insertions": 165,
            "deletions": 75
          },
          {
            "hash": "14b7c569e65fedaaadbd2f2143f3d383fcb2346f",
            "messageTitle": "Fix empty ramps when overriding RepoConfiguration (#243)",
            "messageBody": "When a repo has a _reposense/config.json configuration file,\r\nthe RepoConfiguration will be reset to the new config.json file,\r\nand all authors are reset as well.\r\n\r\nHowever, these reset authors does not have their author aliases\r\nor ignore glob list set inside them. This may cause some of the\r\ncommit info to be missing as we are filtering commits by author\r\nnames and aliases.\r\n\r\nLet\u0027s fix this by updating the\r\nRepoConfiguration#update(StandAloneConfig) to set the\r\nauthor aliases and ignore glob list for each author inside the\r\nconfig.json file.",
            "insertions": 17,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 67,
        "deletions": 5,
        "date": "2018-08-16",
        "commitResults": [
          {
            "hash": "cc1cfbf95f8338d114d82899ad15ca6107485bf3",
            "messageTitle": "[#299] Fix error matching file path pattern inside file diff result (#300)",
            "messageBody": "FileInfoExtractor#getFilePathFromDiffPattern(String) checks\r\nfor the group pattern \u0027+++ b/path/to/file\u0027\r\nwithin the git diff result in order to get the file path.\r\n\r\nHowever, when a file is renamed without changing any of its\r\ncontent in between the commit range to analysis, the file will\r\nappear in the git diff result, but since there are no lines to display,\r\nthe above group does not get printed, thus \r\nFileInfoExtractor#getFilePathFromDiffPattern(String) is unable\r\nto match the pattern, causing the program to crash.\r\n\r\nLet\u0027s add a check to skip these renamed but untouched files in \r\nthe git diff result, since an untouched file has no lines to \r\nattribute any contribution.",
            "insertions": 35,
            "deletions": 4
          },
          {
            "hash": "f6f5f2640e59d76d6a8702ee3586ef654181d1d5",
            "messageTitle": "[#301] Hotfix: report folder not generated when failed to analyze repo (#302)",
            "messageBody": "When we fail to clone/checkout a config\u0027s repository, we will\r\nskip analyzing that repository, thus not generating its report folder.\r\n\r\nHowever, as the config is still inside the config list, we will still add\r\nthat \u0027failed\u0027 config into summary.json. This will cause the dashboard\r\nto crash as it tries to load a report folder which does not exist.\r\n\r\nLet\u0027s update ReportGenerator to generate the report folder with\r\n\u0027empty\u0027 reports when failing to clone/checkout the repository, so as\r\nto allow the dashboard to be viewed, and also allow the user to identify\r\nerrors in which repository config info given.",
            "insertions": 32,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 311,
        "deletions": 53,
        "date": "2018-08-19",
        "commitResults": [
          {
            "hash": "e9bff1bbca722268a3088ec52926e1ec0cfbd2c5",
            "messageTitle": "[#246] Add support for repo-level commit exclusion (#261)",
            "messageBody": "User may sometimes wish to ignore some \u0027ugly\u0027 commits\r\nmade that will distort the dashboard\u0027s rampchart statistics.\r\n\r\nTo allow this, let\u0027s add support for repo-level commit\r\nexclusions.",
            "insertions": 311,
            "deletions": 53
          }
        ]
      },
      {
        "insertions": 57,
        "deletions": 42,
        "date": "2018-08-29",
        "commitResults": [
          {
            "hash": "9a44435e5c9cdc841d0b51acf01fcb64c093fa85",
            "messageTitle": "Clean up build.gradle (#309)",
            "messageBody": "build.gradle contains some unused dependencies, inconsistent styles,\r\noutdated version plugins etc.\r\n\r\nLet\u0027s fix them.",
            "insertions": 44,
            "deletions": 29
          },
          {
            "hash": "f27a1902fe81687c999af012d45753d859ff0313",
            "messageTitle": "[#85] Rename functional to systemtest (#306)",
            "messageBody": "Functional folder is a skeleton of an end-to-end testing infrastructure.\r\n\r\nHowever the name is not intuitive enough to imply it so. Also, the functional\r\ntest is placed in a separate package of the \u0027src\u0027 module instead of the \u0027test\u0027 \r\nmodule, making IntelliJ unable to find the classes and resources to run it.\r\n\r\nLet\u0027s rename functional to system test.",
            "insertions": 13,
            "deletions": 13
          }
        ]
      },
      {
        "insertions": 134,
        "deletions": 102,
        "date": "2018-09-27",
        "commitResults": [
          {
            "hash": "f9b37ce7d37f094f0df18096c84d3ce5e0596c25",
            "messageTitle": "[#340] Allow non-alpha-numeric characters in GitHub usernames (#347)",
            "messageBody": "The Author class restricts the github id and author names to only contain\r\nalphanumeric characters, plus some other symbols, for security purposes as\r\nthis values are used inside the OS terminal.\r\n\r\nAs we are allowed to change out git author name to be anything as it\r\ndoes not have any restrictions, having this restrictions for our Author\r\nclass will prevent some users from using our app to analyze their repo\r\nif the author name they wish to use contain non alphanumeric characters.\r\n\r\nAlso, special non-UTF-8 characters may also be used for the author name,\r\nwhich may cause MalformedInputException[1] when trying to read the\r\nauthor-config.csv file.\r\n\r\nAs the --author param field of the git log command uses regex pattern\r\nto perform the author filtration, we can swap out any of these computer\r\nsymbols which may have different uses in the OS terminal into a . period\r\ninstead to indicate any character instead, allowing us to still get the correct\r\nauthor filter without conflicting with the OS terminal. However, this may\r\ncause the accuracy of the analysis to be reduced if there are multiple authors\r\nwith very similar names in the repo.\r\n\r\nLet\u0027s\r\n- remove validation of github id and names in the Author class\r\n- add a method in StringUtil to swap computer symbols in the author\r\nname to the . period\r\n- add a note in the UserGuide warning users who have author names\r\nthat are very similar and have symbols\r\n- update the CsvParser to use the java.io BufferedReader constructor for\r\nreading of the csv files instead to allow non-UTF-8 characters.\r\n\r\n[1]: Similar issue when reading files previously resolved\r\nhttps://github.com/reposense/RepoSense/commit/1f222c0fd93fd8c5399a27c18aa03c03871f7cee",
            "insertions": 134,
            "deletions": 102
          }
        ]
      },
      {
        "insertions": 74,
        "deletions": 12,
        "date": "2018-09-28",
        "commitResults": [
          {
            "hash": "1db15975ba82c913195fd7588527f51ff13f6c0b",
            "messageTitle": "[#341] Show only authors who have contributed during analysis period (#349)",
            "messageBody": "When no author details is specified for a repo to analyze, all authors who\r\nhave contributed to the repo will be analyzed by default, even if a date\r\nrange is specified where some of the authors did not contribute in.\r\n\r\nAs users are only interested in the analysis within that date range if they\r\nspecify one, having all the other authors who did not contribute in that\r\ndate range also listed out will lead to unnecessary usage of time generating\r\nthe report, and fill the dashboard with unnecessary information as those authors\r\nwill have zero contribution, increasing its memory usage.\r\n\r\nLet\u0027s update the analysis to only consider the authors within date range\r\nif no author details is specified.",
            "insertions": 74,
            "deletions": 12
          }
        ]
      },
      {
        "insertions": 15,
        "deletions": 52,
        "date": "2018-10-07",
        "commitResults": [
          {
            "hash": "c05f000e0daf69de292a4c53201fc8c47213fae5",
            "messageTitle": "[#357] FileInfoExtractor: use cleaner alternative to extract code change (#361)",
            "messageBody": "FileInfoExtractor#getEditedFileInfos(...) first checks for each file\r\nwhether they in a blacklist of \u0027uncommon\u0027 file changes which does not\r\nfollow the line patterns that we check for, and skips those files as they\r\nare all unchanged files that does not have any difference to check for.\r\n\r\nAs there are many of such \u0027uncommon\u0027 file changes, some of these changes\r\nmay not have been added in our blacklist yet, which may cause the program\r\nto crash unexpectedly, e.g #215 #300 #356.\r\n\r\nInstead of trying to find out each of this \u0027uncommon\u0027 file changes and\r\nblacklisting each 1 of them, it is easier and cleaner to whitelist only\r\nthose files that have valid diff file changes which follow the line patterns\r\nwe are checking for.\r\n\r\nLet\u0027s change the blacklist for valid diff files to be a whitelist instead,\r\nand check for the exception if this file is deleted.",
            "insertions": 15,
            "deletions": 52
          }
        ]
      },
      {
        "insertions": 51,
        "deletions": 5,
        "date": "2018-10-15",
        "commitResults": [
          {
            "hash": "be94eedde7dd797793cd29b2af425a5d2e69f486",
            "messageTitle": "[#370] Fix uncaught InvalidPathException due to Illegal char \u003c:\u003e in file name (#371)",
            "messageBody": "Windows disallows certain characters for the file names, such as `/\\:*?\"\u003c\u003e|`,\r\nwhile other OSes like Linux allows almost any characters for their file names.\r\nThis may result in some files with such `banned` characters in the repository\r\nto not be copied/cloned into a local copy for Windows OS.\r\n\r\nAs we use the `git diff` command to find file differences for analyzing\r\nrepositories with a date range, such files with `banned` characters may appear\r\nin the `git diff` result, which result in an InvalidPathException being thrown\r\nwhen we try to create a Path to this file name, which is invalid in Windows.\r\nThis causes the program to crash as the exception is not handled anywhere.\r\n\r\nLet\u0027s update FileInfoExtractor to handle files with invalid file names by\r\nskipping those files.",
            "insertions": 51,
            "deletions": 5
          }
        ]
      },
      {
        "insertions": 27,
        "deletions": 0,
        "date": "2019-01-23",
        "commitResults": [
          {
            "hash": "ad10410d26aba8dbcfe1b13cbcd752ad544accf8",
            "messageTitle": "[#297] UserGuide: add FAQ section to address common problems (#494)",
            "messageBody": "Our UserGuide does not have a FAQ section.\r\n\r\nLet\u0027s add a FAQ section in our UserGuide to address common questions\r\nand issues, allowing users troubleshoot them themselves.",
            "insertions": 27,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 12,
        "deletions": 2,
        "date": "2019-02-24",
        "commitResults": [
          {
            "hash": "ca24a0dfa0d04b633559b8806702ba658a11c255",
            "messageTitle": "[#546] FAQ: add another entry to propose email as alternative to GitHub ID (#568)",
            "messageBody": "In the UserGuide FAQ section, we mention that commit contribution\r\nmay not appear in the ramp chart if the user did not associate the\r\ncorrect author name aliases to their GitHub ID, and to double check\r\ntheir author name aliases.\r\n\r\nAfter #493 though, RepoSense allows user to associate their GitHub\r\nemail to their GitHub ID as well, which is more accurate as it is a\r\nfixed value, compared to author name aliases which can have many\r\ndifferent values depending on their local git settings and on different\r\nmachines. As such, it is better to ask users to use email instead of\r\nauthor name aliases if they face such problems of their contribution\r\nnot being tracked by RepoSense.\r\n\r\nLet\u0027s update FAQ to propose email as an alternative to associate to the\r\nuser\u0027s GitHub ID instead.\r\n\r\nThe command given in the `A Note About Git Author Name` is not\r\nexactly accurate, as it only changes the git author name settings for\r\nfuture initiated or cloned git repositories, but not for the current\r\ngit repository, which is what most users who are reading the FAQ would\r\nwant.\r\n\r\nLet\u0027s also update the `A Note About Git Author Name` section to\r\ninclude the correct command for changing the git author name settings\r\nfor the current git repository as well.",
            "insertions": 12,
            "deletions": 2
          }
        ]
      }
    ],
    "yong24s": [
      {
        "insertions": 0,
        "deletions": 32,
        "date": "2018-05-17",
        "commitResults": [
          {
            "hash": "9200172371fa1cb70b256a8f48076e8562580d56",
            "messageTitle": "[#70] Remove unused class Console (#108)",
            "messageBody": "Following the removal of GUI in #77, the Console class is left unused.\r\nFurthermore, as it requires an additional JavaFX library which is not\r\nused in anywhere else in the project, it creates a redundant\r\ndependency request for the compiler.\r\n\r\nLet\u0027s remove the unused class Console.",
            "insertions": 0,
            "deletions": 32
          }
        ]
      },
      {
        "insertions": 201,
        "deletions": 90,
        "date": "2018-05-20",
        "commitResults": [
          {
            "hash": "a97429dc07a67a674190923f4e748c69976d1ec2",
            "messageTitle": "Apply single responsibility principle to frontend component (#99)",
            "messageBody": "Client class performs the parsing of inputs, and functionalities that\r\nshould have been part of the main program.\r\n\r\nThis violates the single responsibility principle as every module or\r\nclass should only be responsible for a single part of the\r\nfunctionality. By delegating the parsing of strings to another module,\r\nthis allows easier addition and modification of new parsers and\r\nfunctionalities.\r\n\r\nLet\u0027s add a new package parser to improve the cohesiveness and\r\nmaintainability of the codebase.",
            "insertions": 201,
            "deletions": 90
          }
        ]
      },
      {
        "insertions": 367,
        "deletions": 171,
        "date": "2018-06-09",
        "commitResults": [
          {
            "hash": "ec45509189bf4a07654e16b2466ad7fedb1d56bc",
            "messageTitle": "Increase parsing capabilities using third-party library (#128)",
            "messageBody": "The program expects arguments to be given in a pair, in the form\r\n\"-argument value\".\r\n\r\nThis design is not flexible as it does not allow inputs with no value\r\nor multiple values. For example, -incremental and -config file1 file2\r\nfile3.\r\n\r\nLet\u0027s use third-party argument parser library, ArgParse4J to increase\r\nflexibility and functionality. It provides many quality-of-life\r\nfeatures, such as, flexible arguments as well as datatype conversion.",
            "insertions": 367,
            "deletions": 171
          }
        ]
      },
      {
        "insertions": 5,
        "deletions": 4,
        "date": "2018-06-11",
        "commitResults": [
          {
            "hash": "f22c90cbf5e9fd85d2026884e0daa36e1ccb400e",
            "messageTitle": "[#128] Fix failing ArgParser unit tests on Windows systems (#141)",
            "messageBody": "ArgsParser unit tests use ClassLoader#getResource(String) to get the path to\r\na resource file/directory.\r\n\r\nAccording to this SO post[1], ClassLoader#getResource(String) adds an extra\r\nleading slash before a path on Windows systems, which may cause the path\r\nwe get to be invalid, resulting in all ArgsParser\u0027s unit tests to fail.\r\n\r\nLet\u0027s update ArgsParserTest to use File(String).toPath() to prevent\r\nthe extra leading slash in Windows system.\r\n\r\n[1]: Leading slash before disk name in Windows:\r\nhttps://stackoverflow.com/questions/15662820/getresource-puts-a-leading-before-the-disk-name-using-java-1-7-windows-7",
            "insertions": 5,
            "deletions": 4
          }
        ]
      },
      {
        "insertions": 243,
        "deletions": 144,
        "date": "2018-06-18",
        "commitResults": [
          {
            "hash": "d8e6cdf333f63119df6c4c7097742814b0a40925",
            "messageTitle": "[#143] Enable macOS execution environment on Travis-CI (#144)",
            "messageBody": "As an Java application, RepoSense is able to execute on all OSes that\r\nsupports jar executable. It is important to ensure that our application\r\ndoes not break on the supported OSes.\r\n\r\nIn addition to the linux execution environment, Travis also supports CI\r\non macOS. Furthermore, this multi-environment configuration allows\r\nparallel execution according to Travis-CI documentation [1].\r\n\r\nLet\u0027s enable a second build environment, macOS, on travis, so we can\r\nensure RepoSense runs correctly on all supported OSes.\r\n\r\n[1] Testing Your Project on Multiple Operating Systems:\r\nhttps://docs.travis-ci.com/user/multi-os/",
            "insertions": 10,
            "deletions": 2
          },
          {
            "hash": "c1cd11ae678c5e1e1ec79b0a6c0388b8ae4e23e9",
            "messageTitle": "[#60] Simplify CSV configuration file format (#130)",
            "messageBody": "The format of the CSV configuration file requires all white listed\r\nauthors pertaining to a repository to be written in a line.\r\n\r\nThis design may degrade user-friendliness, as it may be\r\nmore difficult to add information horizontally for repository with\r\nlarge number of contributors.\r\n\r\nLet\u0027s change the format of the CSV configuration file to one author\r\nper line, so that the experience of adding new user is consistent.\r\nThus, improving user experience.",
            "insertions": 233,
            "deletions": 142
          }
        ]
      },
      {
        "insertions": 49,
        "deletions": 63,
        "date": "2018-07-02",
        "commitResults": [
          {
            "hash": "b789ed919a642d36b12b0c1bc8831d1bb39f87a8",
            "messageTitle": "Modification to accommodate netlify (#150)",
            "messageBody": "To validate a PR, a reviewer would have to generate the dashboard\r\non his/her computer which results in additional lead-time.\r\n\r\nLet\u0027s deploy the generated dashboard to netlify to streamline the\r\nprocess of validation.",
            "insertions": 49,
            "deletions": 63
          }
        ]
      },
      {
        "insertions": 25,
        "deletions": 16,
        "date": "2018-07-16",
        "commitResults": [
          {
            "hash": "d1ec823ca24763594b00279ca0b81a70e54ef797",
            "messageTitle": "[#194] Fix invalid path when accessing jar resources (#196)",
            "messageBody": "RepoSense v1.1-rc2 executed as a JAR throws an InvalidPathException\r\nwhen accessing templateZip.zip.\r\n\r\nThis is because the location of the templateZip.zip cannot be located\r\nby its path on the disk but by its relative path in the JAR file. \r\n\r\nSo let\u0027s change the way to retrieve templateZip.zip from \r\nRepoSense.class.getClassLoader().getResource(\"templateZip.zip\") to \r\nRepoSense.class.getResourceAsStream(\"/templateZip.zip\").",
            "insertions": 25,
            "deletions": 16
          }
        ]
      },
      {
        "insertions": 127,
        "deletions": 48,
        "date": "2018-07-18",
        "commitResults": [
          {
            "hash": "58e63c1c834afe587c28e03c952e8d98a320d7c1",
            "messageTitle": "[#56] Add support for user-supplied file formats (#159)",
            "messageBody": "File formats .java and .adoc are hardcoded in the git log command of\r\nRepoSense.\r\n\r\nAs the file formats are not changable, this means RepoSense may only\r\nbe useful for users who work on repository that consisting mainly of\r\njava or adoc.\r\n\r\nLet\u0027s allow an optional file formats to be passed in as a parameter so\r\nthat user could use RepoSense on repositories with different codebases.",
            "insertions": 127,
            "deletions": 48
          }
        ]
      },
      {
        "insertions": 177,
        "deletions": 124,
        "date": "2018-07-23",
        "commitResults": [
          {
            "hash": "5664a2a039cfc690c1f2bc78fe34e7a96dd9092b",
            "messageTitle": "Allow location to be supplied into CSV Config File (#210)",
            "messageBody": "Representing a repository with organization and repository name in \r\nthe config csv file may only satisfies basic usage.\r\n\r\nBy generalizing it to location allows cloning from disk locations or\r\nusing of more complex .git links.\r\ni.e. https://username@github.com/organization/repository.git. \r\n\r\nLet\u0027s use location in the config csv file to make git clone more\r\nversatile.",
            "insertions": 177,
            "deletions": 124
          }
        ]
      },
      {
        "insertions": 135,
        "deletions": 64,
        "date": "2018-07-30",
        "commitResults": [
          {
            "hash": "0b001e0804b89b354fef0fd9de1de57787435ca6",
            "messageTitle": "[#245] Change -config to use a configuration folder (#249)",
            "messageBody": "RepoSense uses a CSV config file for all repository information.\r\n\r\nFollowing #234, analysis can be done at author level.\r\nTo make author level analysis available to the users, the CSV config\r\nfile has to be broken down into repo-config.csv and author-config.csv.\r\n\r\nLet\u0027s start by changing cli argument -config to accept a folder to\r\nsupport multiple CSV config files. ",
            "insertions": 135,
            "deletions": 64
          }
        ]
      },
      {
        "insertions": 270,
        "deletions": 61,
        "date": "2018-07-31",
        "commitResults": [
          {
            "hash": "9fcb851ab540c8f411f1d8fcdeafb745fc363dc3",
            "messageTitle": "Support git and disk location as CLI inputs (#241)",
            "messageBody": "Following #232, authors information can be decentralized to a\r\nconfig.json file in a repository.\r\n\r\nSo, having another config.csv to hold repository locations just to run\r\nRepoSense can be repetitious.\r\n\r\nLet\u0027s allow repository locations to be supplied directly as CLI inputs\r\nto streamline analysis of repositories with decentralized authors\r\ninformation.",
            "insertions": 270,
            "deletions": 61
          }
        ]
      },
      {
        "insertions": 492,
        "deletions": 190,
        "date": "2018-08-02",
        "commitResults": [
          {
            "hash": "0aeef436ef696b713ca3460c8c0c62e8b39bd5a1",
            "messageTitle": "[#244] Add repo file exclusion patterns to standalone config (#248)",
            "messageBody": "Following #218, file exclusion glob patterns can be supplied in the\r\ncsv config file.\r\n\r\nLet\u0027s decentralized this setting to the _reposense/config.json so\r\nrepository owners can apply it to their repositories.",
            "insertions": 104,
            "deletions": 61
          },
          {
            "hash": "fa6b680d6a13f9875969f0ed65aacf217d7546a1",
            "messageTitle": "[#245] Split repo and author level configurations (#238)",
            "messageBody": "RepoSense uses a CSV config file for all repository information.\r\n\r\nFollowing #234, analysis can be done at author level.\r\nTo make author level analysis available to the users, the CSV config\r\nfile has to be broken down into repo-config.csv and author-config.csv.\r\n\r\nLet\u0027s split the CSV config file to repo-config.csv and author-config.csv.\r\n",
            "insertions": 388,
            "deletions": 129
          }
        ]
      },
      {
        "insertions": 77,
        "deletions": 5,
        "date": "2018-08-03",
        "commitResults": [
          {
            "hash": "42516d95bd6a5ea31302780a7b5993fb0e4e42c7",
            "messageTitle": "[#275] Fix UnsupportedOperationException occurred during ignore glob list merge (#276)",
            "messageBody": "Arrays.asList creates a wrapper over the original array to make it\r\navailable as a list.\r\n\r\nThis makes certain operations not allowed on the wrapper, such as\r\nadding or removing elements from the list, and result in\r\nUnsupportedOperationException being thrown when we execute these\r\noperations forcefully.\r\n\r\nLet\u0027s replace it with new ArrayList\u003c\u003e(Arrays.asList(...)) which creates\r\na new List fully independent of the original array.",
            "insertions": 2,
            "deletions": 1
          },
          {
            "hash": "d9c1f2d84fb5a40abf3d25de3120e0e97480a82f",
            "messageTitle": "Fix creation of many author configs (#278)",
            "messageBody": "",
            "insertions": 7,
            "deletions": 3
          },
          {
            "hash": "939d9baa52d7596111f97b3c27b573deb40fa855",
            "messageTitle": "Add tests to RepoConfiguration#merge (#279)",
            "messageBody": "AuthorConfigCsvParser#getRepoConfiguration should return existing\r\nRepoConfiguration from a list of RepoConfigurations. Otherwise it adds\r\na newly created RepoConfiguration into the list and returns it.\r\n\r\nHowever, due to a bug, any RepoConfigurations existing or not are added\r\nto the list of RepoConfigurations causing duplicates.\r\n\r\nLet\u0027s add test to RepoConfiguration#merge to prevent bugs. ",
            "insertions": 68,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 140,
        "deletions": 36,
        "date": "2018-08-11",
        "commitResults": [
          {
            "hash": "51397d39152086b17b01c78e6ece9fb06c8bde30",
            "messageTitle": "Add functionality to ignore standalone config #272 (#288)",
            "messageBody": "RepoSense offers decentralization of configuration by allowing\r\nrepository owners to set up their own standalone config.\r\n\r\nWhile this enhance the ease of use, it does not offer our users the\r\nflexibility to overrule the standalone configuration with their own.\r\n\r\nLet\u0027s add an additional configuration column in repo-config.csv to\r\nforcibly use the user supplied configuration by ignoring the one\r\ndefined by the repository owner.",
            "insertions": 140,
            "deletions": 36
          }
        ]
      },
      {
        "insertions": 162,
        "deletions": 36,
        "date": "2018-08-29",
        "commitResults": [
          {
            "hash": "465acfeaa73530e9386f5aff6cfae864664c0b23",
            "messageTitle": "[#271] Support specifying of file formats at repo level (#295)",
            "messageBody": "RepoSense allows specifying of file formats for analysis through CLI.\r\n\r\nHowever, this sets all repositories to the same file formats.\r\n\r\nLet\u0027s make file formats configurable in CSV and standalone configs\r\nto improve usage on repositories with different file formats\r\nand codebases.",
            "insertions": 162,
            "deletions": 36
          }
        ]
      },
      {
        "insertions": 86,
        "deletions": 2,
        "date": "2018-09-02",
        "commitResults": [
          {
            "hash": "9583ab23caa4a4d7c599d03faa0651b85f34d515",
            "messageTitle": "[#317] Add repo as alias to repos in CLI  (#322)",
            "messageBody": "RepoSense accepts repository locations with argument -repos.\r\n\r\nThe plurality is not intuitive for first-time users, who wish\r\nto use one repository.\r\n\r\nLet\u0027s add repo as an alias to repos to make the CLI more inituive.",
            "insertions": 86,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 152,
        "deletions": 6,
        "date": "2018-10-14",
        "commitResults": [
          {
            "hash": "0337d3666c13d7efbdc3a1ed65ab7155df856dfb",
            "messageTitle": "[#366] Fix NullPointerException when accessing unfilled displayName in StandaloneConfig (#368)",
            "messageBody": "In our user guide, we allow most of the fields under the authors\u0027\r\nconfiguration to be optional other than the GitHub Id. Particularly\r\n`Display Name`, which is suppose to use GitHub Id value when it is not\r\nprovided. However, when the display name is not filled in the\r\nstandalone config, the program crashes due to a NullPointerException.\r\n\r\nThis is because standalone config adopts the json format. When a field\r\nis not filled in, in the json file, it will be initialized as null when\r\ndeserialized into a java object. This was unforeseen and was left\r\nunchecked when accessing the variable.\r\n\r\nLet\u0027s fix this by returning an empty string as the default value of\r\ndisplay name in the event of a null case, and also include unit tests\r\nfor StandaloneConfig parser.",
            "insertions": 152,
            "deletions": 6
          }
        ]
      },
      {
        "insertions": 0,
        "deletions": 2,
        "date": "2018-12-11",
        "commitResults": [
          {
            "hash": "f5cfc81e5cee0c28c007453f32e47664dfe960b4",
            "messageTitle": "[#413] Update Travis-CI configuration to fix pcre2 dependency (#414)",
            "messageBody": "Git in Travis macosx image lacked pcre2 dependency to run checkstyle.\r\nThus, a line was added to reinstall Git with pcre2.\r\n\r\nHowever, Git is then updated to use pcre2 by default and --with-pcre2\r\noption was removed. This missing option causes Travis to fail.\r\n\r\nLet\u0027s remove the line to reinstall Git with pcre2 in Travis configuration\r\nto fix the issue.",
            "insertions": 0,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 70,
        "deletions": 0,
        "date": "2018-12-18",
        "commitResults": [
          {
            "hash": "badbbc063ac8f3fca0073c0af0ca18ef8533b6cc",
            "messageTitle": "[#402] Make StandaloneConfig foolproof to exceptions caused by trailing commas (#412)",
            "messageBody": "Extra trailing commas is non-compliant to JSON standards.\r\n\r\nThis causes gson to improperly parse a list, creating additional\r\nnull elements, resulting NullPointerException in RepoConfiguration#update.\r\n\r\nLet\u0027s prevent NullPointerException by removing null elements in lists.",
            "insertions": 70,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 93,
        "deletions": 0,
        "date": "2019-01-27",
        "commitResults": [
          {
            "hash": "572763e6690ffc40f92db7a54ff6dcd58e905c06",
            "messageTitle": "[#23, #470] Use Travis-CI to automate publishing of report to GitHub Pages (#497)",
            "messageBody": "Travis-CI offers cron jobs, which is used to trigger builds at certain\r\nintervals.\r\n\r\nTogether with GitHub Pages, they can be utilized to make RepoSense a\r\ncloud application, where it can periodically run analysis and update the\r\nreport to a live site.\r\n\r\nLet\u0027s utilize Travis-CI to automate publishing of RepoSense report to\r\nGitHub Pages, removing manual intervention for report updating.",
            "insertions": 93,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 6,
        "deletions": 8,
        "date": "2019-02-12",
        "commitResults": [
          {
            "hash": "f86a52617ee8ab13cdf696c0e196fdc90cf5f778",
            "messageTitle": "Remove redundant commands in Travis config (#551)",
            "messageBody": "In the Travis config file, we specify our Linux environment to use\r\nJDK9 with `jdk: oraclejdk9` and `addons.apt.packages key`, but the\r\nlatter is redundant. Similarly, the command used to install frontend\r\nnpm dependencies can be simpified. The cd command does not change the\r\ninstall location of the npm dependencies as frontend folder does not\r\ncontain a package.json file.\r\n\r\nLet\u0027s remove the redundant commands for clarity and maintainability.",
            "insertions": 6,
            "deletions": 8
          }
        ]
      },
      {
        "insertions": 4,
        "deletions": 3,
        "date": "2019-02-17",
        "commitResults": [
          {
            "hash": "9d19b75cbf36c47a50d419c1403875f2bafde02a",
            "messageTitle": "[#537] build.gradle: fix files compilation order (#552)",
            "messageBody": "Nits to message:\r\n\r\n```\r\nWe use `./gradlew run` in development to conveniently run RepoSense\r\nwithout the need to build a Jar.\r\n\r\nIt is expected to do the following tasks sequentially:\r\n\r\n[a] npmRunSpuild - build frontend/src to frontend/build\r\n[b] zipReport    - zip `frontend/build` to resource of zip\r\n[c] build   \t - build src to build files\r\n[d] run          - execute the build files\r\n\r\nHowever, when we execute the command, `./gradlew run --dry-run`\r\nto list the running order, it differs from the expectation.\r\n\r\nActual order:\r\n:compileJava\t\t[c]\r\n:processResources \t[c]\r\n:classes \t        [c]\r\n:downloadNode \t\t[a]\r\n:npmInstall \t\t[a]\r\n:npmRunSpuild \t\t[a]\r\n:zipReport \t        [b]\r\n:run \t\t\t[d]\r\n\r\nExpected order:\r\n:downloadNode\t\t[a]\r\n:npmInstall\t\t[a]\r\n:npmRunSpuild\t\t[a]\r\n:zipReport\t\t[b]\r\n:compileJava\t\t[c]\r\n:processResources\t[c]\r\n:classes\t\t[c]\r\n:run \t\t\t[d]\r\n\r\nThe incorrect order may result in RepoSense failing due to missing\r\ntemplateZip or using an outdated templateZip.\r\n\r\nLet\u0027s fix the issue by correctly chaining the task dependencies.\r\n```",
            "insertions": 2,
            "deletions": 1
          },
          {
            "hash": "c8b0fa6e4f670b073f5b52cc3cdeef7324a393ce",
            "messageTitle": "[#537] build.gradle: change tasks dependencies to compileJava (#563)",
            "messageBody": "",
            "insertions": 2,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 2,
        "deletions": 1,
        "date": "2019-02-20",
        "commitResults": [
          {
            "hash": "afd231700b71029ecf2c57f54d083759d7f1fb12",
            "messageTitle": "[#557] Travis: check scripts do not work in Travis macOS environment (#559)",
            "messageBody": "Following #414, the line to reinstall `git` with `pcre2` was removed in\r\nTravis macOS environment. As running `brew reinstall --with-pcre2 git`\r\nwould caused Travis to fail. Furthermore, `pcre2` now ships with\r\n`git \u003e\u003d 2.19`.\r\n\r\nSince its removal, check scripts, that depends on `pcre2`, do not work\r\nbut Travis macOS still passes. This is due to the use of an older\r\nversion of git which does not comes with `pcre2`.\r\n\r\nLet\u0027s use the latest version of Travis macOS image, that comes with git\r\n2.19.1, to ensure check scripts run correctly.",
            "insertions": 2,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 18,
        "deletions": 5,
        "date": "2019-02-21",
        "commitResults": [
          {
            "hash": "b3425d2f1d61074f6ae4cd4ef6c796d04885a6f3",
            "messageTitle": "Downgrade to JDK8 in CIs (#556)",
            "messageBody": "RepoSense is advertised to run on JDK 1.8.0_60 and later.\r\n\r\nHowever, we use JDK 9 in our CIs.\r\n\r\nLet\u0027s downgrade to use JDK 8 in CIs to validate this non-functional\r\nrequirement.",
            "insertions": 18,
            "deletions": 5
          }
        ]
      },
      {
        "insertions": 65,
        "deletions": 1,
        "date": "2019-02-25",
        "commitResults": [
          {
            "hash": "c94360eb807f60d22601ec96944d391f82a36516",
            "messageTitle": "[#480] Use Cypress to automate front-end testing (#555)",
            "messageBody": "UI has been relying on reviewers to test it manually. While it promotes\r\nshorter development time, our product\u0027s reliability has suffered in the\r\nrecent UI development. \r\n\r\nLet\u0027s integrate Cypress into our CI to automate the front-end testing\r\nin CI to ensure better reliability.\r\n",
            "insertions": 65,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 196,
        "deletions": 13,
        "date": "2019-04-04",
        "commitResults": [
          {
            "hash": "fed37581bbf17ae61a587256633be47924284b70",
            "messageTitle": "[#391] GitLsTree: validate filepaths before cloning (#564)",
            "messageBody": "Unix and Windows use a different set of invalid characters, with the\r\nlatter being more restrictive.\r\n\r\nA valid file path in Unix may be invalid in Windows, which causes git\r\nclone to fail. We classify this error generally as GitCloneException,\r\nwhich may not be useful in conveying the exact cause of error.\r\n\r\nLet\u0027s validate file paths and use a more specialized exception to log\r\ninvalid file paths, when analysis is done on Windows.\r\n",
            "insertions": 196,
            "deletions": 13
          }
        ]
      },
      {
        "insertions": 7,
        "deletions": 7,
        "date": "2019-04-20",
        "commitResults": [
          {
            "hash": "5e556b9a4fdb892037da6395bf98606fbce52c64",
            "messageTitle": "[#648]: .travis.yml: change oraclejdk8 to openjdk8 (#650)",
            "messageBody": "The oracle-java8-installer in our .travis.yml refers to\r\nppa:webupd8team/java repository. According to the repo maintainer[1],\r\nthe repository has been discontinued due to \"licensing issues\".\r\nSimilarly, the homebrew java8[2] has been removed as well.\r\n\r\nLet\u0027s update .travis.yml to use openjdk8 instead.\r\n\r\n[1]: https://launchpad.net/~webupd8team/+archive/ubuntu/java\r\n[2]: https://www.chuchur.com/article/mac-install-and-uninstall-java-jdk",
            "insertions": 7,
            "deletions": 7
          }
        ]
      },
      {
        "insertions": 18,
        "deletions": 3,
        "date": "2019-06-10",
        "commitResults": [
          {
            "hash": "3c6a148c07376ce2d2dc2a72b07588213cd574c2",
            "messageTitle": "[#606] Enable use of deploy key for publishing (#732)",
            "messageBody": "In the publishing guide, instructions were given to generate personal\r\naccess token to grant write-access to RepoSense for publishing.\r\n\r\nDespite ease of setup, personal access token may not be as secure as it\r\ncan access all other repositories owned by the user.\r\n\r\nLet\u0027s also support deploy key for enhanced security, which enables user\r\nto grant access to only a single repository.",
            "insertions": 18,
            "deletions": 3
          }
        ]
      }
    ],
    "eugenepeh": [
      {
        "insertions": 38,
        "deletions": 3,
        "date": "2018-05-03",
        "commitResults": [
          {
            "hash": "203b9f613c30e0b51c658af4b5e0f243b3e6ad23",
            "messageTitle": "DeveloperGuide: add setup instructions",
            "messageBody": "",
            "insertions": 38,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 39,
        "deletions": 17,
        "date": "2018-05-05",
        "commitResults": [
          {
            "hash": "3a20d00fa1fd666648d9b07d26965205598fef78",
            "messageTitle": "Setup travis to execute test code",
            "messageBody": "",
            "insertions": 21,
            "deletions": 0
          },
          {
            "hash": "21a4d1d779944b2926e688543d704058d1bebb04",
            "messageTitle": "Travis: add files standardization tests",
            "messageBody": "",
            "insertions": 2,
            "deletions": 1
          },
          {
            "hash": "e5db496348644ac49ad95cf61570c7a6f44fbacd",
            "messageTitle": "Fix file standardization violations",
            "messageBody": "",
            "insertions": 16,
            "deletions": 16
          }
        ]
      },
      {
        "insertions": 720,
        "deletions": 729,
        "date": "2018-05-06",
        "commitResults": [
          {
            "hash": "213c4ebbc4e4a1e2c1a181a8c7500e40c7d88c93",
            "messageTitle": "Checkstyle: fix some violations 1",
            "messageBody": "",
            "insertions": 116,
            "deletions": 125
          },
          {
            "hash": "04fa0b31e8823bd1123dec0e574afacbe00bc952",
            "messageTitle": "Checkstyle: fix some violations 2",
            "messageBody": "",
            "insertions": 115,
            "deletions": 118
          },
          {
            "hash": "2d1718d39fdd0ddf60ed3420ae0e833b03520f76",
            "messageTitle": "Checkstyle: fix some violations 3",
            "messageBody": "",
            "insertions": 110,
            "deletions": 83
          },
          {
            "hash": "d3e40705850b412f1b6c6106a372f0f65201d30b",
            "messageTitle": "Checkstyle: fix some violations 4",
            "messageBody": "",
            "insertions": 105,
            "deletions": 100
          },
          {
            "hash": "52d21b94e74e15ed2950861237f6fcc891018974",
            "messageTitle": "Checkstyle: fix some violations 5",
            "messageBody": "",
            "insertions": 102,
            "deletions": 106
          },
          {
            "hash": "dac1e7be406ff32fa256bb6892bd88ab308d2dce",
            "messageTitle": "Checkstyle: fix some violations 6",
            "messageBody": "",
            "insertions": 95,
            "deletions": 100
          },
          {
            "hash": "3f8aedddd19a1de1ea7abbfb26c9df15fe7bac2e",
            "messageTitle": "Checkstyle: fix some violations 7",
            "messageBody": "",
            "insertions": 67,
            "deletions": 94
          },
          {
            "hash": "d8a264aa4bb443a4526d8ae6ed11667e1b86c8ff",
            "messageTitle": "Travis: add checkstyle to CI test",
            "messageBody": "",
            "insertions": 10,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 2,
        "deletions": 0,
        "date": "2018-05-07",
        "commitResults": [
          {
            "hash": "3e3ac2c1fa4d047d0546d2cb1a8f1bf38e0e7ab3",
            "messageTitle": "[#64] README: embed travis status badge (#67)",
            "messageBody": "",
            "insertions": 2,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 2,
        "deletions": 2,
        "date": "2018-05-09",
        "commitResults": [
          {
            "hash": "b75bb63c782a116ebddad44a397648ea6ee4d666",
            "messageTitle": "[#73] Move test repository inside reposense organisation (#74)",
            "messageBody": "",
            "insertions": 2,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 85,
        "deletions": 199,
        "date": "2018-05-10",
        "commitResults": [
          {
            "hash": "bd8b646a4fbc7bb7119af0cfed2dd60f811ad44d",
            "messageTitle": "[#70] Remove GUI (#77)",
            "messageBody": "RepoSense is primarily a CLI app.\r\n\r\nLet us remove the GUI to make the development effort more focused for the time\r\nbeing.",
            "insertions": 29,
            "deletions": 182
          },
          {
            "hash": "a1e09df663b68cba810023fcf565cb5f2a041298",
            "messageTitle": "Docs: add work process guidelines (#75)",
            "messageBody": "Process guidelines help to define each respective member\u0027s role in the\r\nproject. It also helps to streamline repeatable tasks which minimizes\r\nroom for errors and increases overall efficiency.\r\n\r\nLet\u0027s add the process guide to help us better in facilitating\r\noperations in an organization.",
            "insertions": 27,
            "deletions": 2
          },
          {
            "hash": "134c4e0cf4e01fc28362cd918eaa495c36996ce3",
            "messageTitle": "Gradle: replace build with shadowJar plugin (#68)",
            "messageBody": "Gradle build compiles our source files and libraries used in the\r\nprogram into separate jar files, and delivers the entire package as\r\na zip file.\r\n\r\nIt is rather inconvenient as user would have to extract from the zip\r\nfile to use it and also have more unnecessary files to deal with.\r\nAdditionally, if we package only our own class files into the JAR\r\nfile, it will not work properly unless the user has all the other \r\nJAR files (i.e. third party libraries) our classes depend on.\r\n\r\nLet\u0027s replace the gradle build with shadowJar plugin to package all\r\ndependencies into a single JAR file which enhance usability and\r\nportability.\r\n",
            "insertions": 29,
            "deletions": 15
          }
        ]
      },
      {
        "insertions": 210,
        "deletions": 166,
        "date": "2018-05-12",
        "commitResults": [
          {
            "hash": "ef2238a6f48fb7c641224b1807bb367e938f090c",
            "messageTitle": " Prefix all packages with organisation name (#80)",
            "messageBody": "Prefixing our packages with organization name prevents name clashes.\r\nIt also ensures that our packages will be grouped together, following\r\nour import order coding standard.",
            "insertions": 155,
            "deletions": 153
          },
          {
            "hash": "ed7a056fbb03213af4731791404a2b37f0d0ea16",
            "messageTitle": "Docs: add using Checkstyle-IDEA plugin on IntelliJ (#76)",
            "messageBody": "",
            "insertions": 44,
            "deletions": 1
          },
          {
            "hash": "9be121951f0e1bd9948fe7e34485ee721a62ed8a",
            "messageTitle": "Gradle: upgrade to version 4.7 (#83)",
            "messageBody": "Gradle does not recognise Java 9 version.\r\n\r\nThis is likely due to gradle version being out-dated for too long.\r\n\r\nLet\u0027s update gradle to latest version so that it is compatible with\r\nthe newer version of Java.",
            "insertions": 11,
            "deletions": 12
          }
        ]
      },
      {
        "insertions": 1,
        "deletions": 1,
        "date": "2018-05-14",
        "commitResults": [
          {
            "hash": "0029569a040f466229c8e6e0027f01ae6082d107",
            "messageTitle": "Fix main class could not be found (#89)",
            "messageBody": "The jar file built by gradle shadowjar plugin throws a could not\r\nfind or load main class error.\r\n\r\nThis is due to the recent renaming of packages in the project (#80)\r\nand the mainClassName in gradle wasn\u0027t updated correspondingly.\r\n\r\nLet\u0027s apply this fix in the build.gradle.",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 1,
        "deletions": 1,
        "date": "2018-05-15",
        "commitResults": [
          {
            "hash": "5aedfc3b781d035283f0d9dd77d4c03c2f0ec2bf",
            "messageTitle": "Travis: add functional to CI test (#96)",
            "messageBody": "Functional test is a skeleton of an end-to-end testing infrastructure.\r\n\r\nLet\u0027s add functional to the continuous integration test to ensure that\r\nour system is consistent and viable to the users.",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 78,
        "deletions": 132,
        "date": "2018-05-16",
        "commitResults": [
          {
            "hash": "4dec6640ef992114dbf32a5e0721a0dcf8db8f88",
            "messageTitle": "[#72] Remove threading (#104)",
            "messageBody": "Threading starves our development PC of processing power, and also\r\ncauses the issue of randomized output.\r\n\r\nLet\u0027s remove threading temporarily for now.",
            "insertions": 36,
            "deletions": 74
          },
          {
            "hash": "b6258ed06e0a2aaaaa050516740548b3c1d41a4d",
            "messageTitle": "[#69] Remove RepoInfo\u0027s dependency on FileInfo (#95)",
            "messageBody": "Separate the association between Commits and Authorship analysis is\r\nnecessary for us to match the proposed architecture in #69. \r\n\r\nLet\u0027s start by removing FileInfo from RepoInfo model.",
            "insertions": 42,
            "deletions": 58
          }
        ]
      },
      {
        "insertions": 64,
        "deletions": 13,
        "date": "2018-05-24",
        "commitResults": [
          {
            "hash": "0f12e9466616d8fc26e4efe952190f74383e7e8c",
            "messageTitle": "TestUtil: add file content comparison method (#122)",
            "messageBody": "Unlike diff tools, Assert.assertEquals does not provide useful \r\ninformation when the content in 2 File objects are not the same. \r\n\r\nThis makes troubleshooting difficult. As without a clear indication, \r\nit is hard to trace the errors.\r\n\r\nLet\u0027s implement the functionality of printing line differences by \r\nadding the method TestUtil#compareFileContents. ",
            "insertions": 64,
            "deletions": 13
          }
        ]
      },
      {
        "insertions": 148,
        "deletions": 394288,
        "date": "2018-05-25",
        "commitResults": [
          {
            "hash": "e23463a59d73fb87c1dfea588e3eb4bc4daf9c2b",
            "messageTitle": "Split contribution summary by repository #69 (#111)",
            "messageBody": "Contribution summary of each person in each and every repositories \r\nare consolidated into a single file.\r\n\r\nThis leads to heavy memory usage, and creates slow-to-respond\r\ninterfaces.\r\n\r\nLet\u0027s split the contribution summary by repository to reduce the\r\nsystem load, and as a step towards progressive web page loading.",
            "insertions": 148,
            "deletions": 394288
          }
        ]
      },
      {
        "insertions": 10,
        "deletions": 5,
        "date": "2018-05-31",
        "commitResults": [
          {
            "hash": "b686f101af317bdd361153af72ee0932efa338c0",
            "messageTitle": "Fix datetime inconsistency (#125)",
            "messageBody": "Several date time inconsistency exists in the project.\r\n1. Instead of designated constants, raw values are being used in month\r\n   field of Calender setter.\r\n2. Time zone and hours were not specified in the git log command\r\n   execution.\r\n\r\nThis leads to disagreeing outputs when running the program at\r\ndifferent timing or on different machine.\r\n\r\nLet\u0027s fix the date time inconsistency by\r\n1. using the designated constants,\r\n2. and fixed formatted values.",
            "insertions": 10,
            "deletions": 5
          }
        ]
      },
      {
        "insertions": 19,
        "deletions": 0,
        "date": "2018-06-12",
        "commitResults": [
          {
            "hash": "842e8a512ed62d72907b0652ce1e3806196a2f47",
            "messageTitle": "Setup AppVeyor CI (#142)",
            "messageBody": "AppVeyor is a continuous integration service, similar to Travis but\r\nuses Windows virtual machines. Also, employing a secondary service\r\nallows it to be executed in parallel with current CI service.\r\n\r\nLet\u0027s integrate AppVeyor support in our pull request checks to prevent\r\nour application fails on Windows machines.",
            "insertions": 19,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 107,
        "deletions": 66,
        "date": "2018-06-20",
        "commitResults": [
          {
            "hash": "e3b30542a0687cd8d3dc8804f3e68767cb74dba9",
            "messageTitle": "[#140] Cleanup user guide (#146)",
            "messageBody": "",
            "insertions": 107,
            "deletions": 66
          }
        ]
      },
      {
        "insertions": 1955,
        "deletions": 481,
        "date": "2018-07-12",
        "commitResults": [
          {
            "hash": "c247eeb36846b17006169d0f477b6b49f1db8729",
            "messageTitle": "Dashboard revamp (#163)",
            "messageBody": "There are 2 main templates loaded separately to process the information\r\nfrom the generated report. This requires the same template files to be\r\nregenerated multiple times, which greatly increases the size of the\r\ngenerated report unnecessarily. Ideally, it should only contains the\r\ndata for the report.\r\n\r\nAlso, as the dashboard uses vue for its templating engine mostly, let\u0027s\r\nbetter utilize the framework to restructure the dashboard into a single\r\npage application which loads content from the report dynamically.",
            "insertions": 1955,
            "deletions": 481
          }
        ]
      },
      {
        "insertions": 3,
        "deletions": 1,
        "date": "2018-08-04",
        "commitResults": [
          {
            "hash": "4913e50ff961a5e6f93997bb8de4739515e3b502",
            "messageTitle": "[#226] Add clickable link to repositories (#281)",
            "messageBody": "To view the repository, user needs to manually open the link to navigate to it.\r\n\r\nLet\u0027s simplify this by adding a redirect link to the remote repositories in the\r\ndashboard itself.",
            "insertions": 3,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 294,
        "deletions": 19,
        "date": "2018-08-06",
        "commitResults": [
          {
            "hash": "8dccfd4737b6f7ba287e6a0d92ed53dc0ca248cd",
            "messageTitle": "Security patch for using remote data as params (#283)",
            "messageBody": "Many of our operations use terminal utilities.\r\n\r\nThis makes our application prone to security issues when we use remote\r\ndata as parameters in the terminal.\r\n\r\nAs a step towards user\u0027s safety, let\u0027s validate the data to be free of\r\nmalicious input before using them in our operations.",
            "insertions": 294,
            "deletions": 19
          }
        ]
      },
      {
        "insertions": 163,
        "deletions": 24,
        "date": "2018-08-14",
        "commitResults": [
          {
            "hash": "265444825eec87e4f6881629ccdadb13a13e7193",
            "messageTitle": "[#293] List RepoSense team in the README.md (#296)",
            "messageBody": "",
            "insertions": 11,
            "deletions": 0
          },
          {
            "hash": "504a76879f8e6df1601d43842e1c8f141eb3e8eb",
            "messageTitle": "[#277] Make authors configuration completely optional (#294)",
            "messageBody": "Author\u0027s information is compulsory in configuration; RepoSense requires\r\nthe user to configure an author-config.csv or have the repository owner\r\nput up their own configuration.\r\n\r\nThis, however, creates a hurdle for the new users to overcome as they\r\nwould need to build up the configuration before trying out our tool.\r\n\r\nLet\u0027s improve the first impression of our tool by making authors\r\nconfiguration completely optional. All the authors found in history\r\nwill be added to the analysis in the event that no author configuration\r\nwas found for the repository.",
            "insertions": 152,
            "deletions": 24
          }
        ]
      },
      {
        "insertions": 14,
        "deletions": 0,
        "date": "2018-08-25",
        "commitResults": [
          {
            "hash": "87c25b058e297ed0356a7c5c2d6b6808f7fd3c0d",
            "messageTitle": "[#36] Code view: add controls to expand/collapse all files (#307)",
            "messageBody": "Files in code view are shown in open state by default.\r\n\r\nWith the addition of #282, it can be useful to show only the file\r\nheaders as it provides a rough impression of the author\u0027s focus area\r\nof contribution and pattern.\r\n\r\nLet\u0027s add controls to allow user to expand or collapse all the files in\r\ncode view at their will.",
            "insertions": 14,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 2,
        "deletions": 0,
        "date": "2018-08-26",
        "commitResults": [
          {
            "hash": "bd044048a9fdd3d26abf6ada4b6bcfe74655dd63",
            "messageTitle": "README: update badges (#313)",
            "messageBody": "The use of external services, Codacy and Netlify, was not credited on\r\nthe landing page of our project.\r\n\r\nLet\u0027s acknowledge the use of their services by adding their badges in\r\nour README.",
            "insertions": 2,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 12,
        "deletions": 5,
        "date": "2018-08-27",
        "commitResults": [
          {
            "hash": "7ea9c0cb315b3aafe19287dc019ae986cc5a4554",
            "messageTitle": "[#311] code view: differentiate untouched code more (#314)",
            "messageBody": "Untouched code uses the same background and font color as written\r\ncode.\r\n\r\nThis allows the possibility of it being passed off as written code\r\n(i.e., give the viewer an impression that the author changed more code\r\nthan she actually did) because the only way to differentiate the two\r\ntypes of code is the color of the line in the gutter.\r\n\r\nLet\u0027s differentiate the two code types more by adding a light green \r\nbackground to written code.",
            "insertions": 12,
            "deletions": 5
          }
        ]
      },
      {
        "insertions": 56,
        "deletions": 13,
        "date": "2018-09-01",
        "commitResults": [
          {
            "hash": "5b060821d2a5dc46e421da59c539c433cae90916",
            "messageTitle": "[#325] Replace the usage of findstr and grep (#324)",
            "messageBody": "We use terminal functions, findstr and grep, to filter the results of\r\ncommand execution.\r\n\r\nThis requires us to append os dependent command and also subject to the\r\nlimitation of these libraries.\r\n\r\nFor example, findstr does not support proper regex and has no limiting\r\nquantifier support. This can exposes us to problems when searching for \r\npatterns that cannot be resolved with the regex of findstr.\r\n\r\nLet\u0027s replace the use of this 2 functions with our own regex-based text\r\nfiltration method, StringsUtil#filterText.",
            "insertions": 55,
            "deletions": 12
          },
          {
            "hash": "eb4fa98bd0bf115e7068dd05e25dc68ae6c181e7",
            "messageTitle": "README: update url to UserGuide (#327)",
            "messageBody": "Documentation link in landing page points to the User Guide in\r\nproduction.\r\n\r\nThis can result in users reading the User Guide that is ahead of\r\nrelease, looking at features irrelevant to the jar they are using.\r\n\r\nAs users may not how to look for user guide pertaining to their\r\ndownloaded version, let\u0027s have the url in README to redirect user to\r\nthe latest released User Guide. ",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 29,
        "deletions": 14,
        "date": "2018-09-04",
        "commitResults": [
          {
            "hash": "37fdfff32352fe0fdb2e90e603864885d2911705",
            "messageTitle": "[#328] UserGuide: add instruction for multi-value fields and columns (#333)",
            "messageBody": "Some fields in our CLI arguments and configuration files accept\r\nmultiple values.\r\n\r\nThis information was not delivered to the users and users have to infer\r\nthis from the given examples.\r\n\r\nLet\u0027s deliver this concept more explicitly by adding foot notes to\r\nprovide the explanation for these fields.",
            "insertions": 29,
            "deletions": 14
          }
        ]
      },
      {
        "insertions": 92,
        "deletions": 57,
        "date": "2018-09-10",
        "commitResults": [
          {
            "hash": "e0d1290cbbb923dedc08b2159deb417b2204533b",
            "messageTitle": "[#329] UserGuide: clean up and rearrange sections (#334)",
            "messageBody": "The instructions on many sections are incomplete and contains duplicate\r\ninformation. Also, there is an inconsistency in phrasing of the\r\ntitles.\r\n\r\nLet\u0027s clean up them up and also add a ToC to avoid confusing the users.",
            "insertions": 92,
            "deletions": 57
          }
        ]
      },
      {
        "insertions": 30,
        "deletions": 30,
        "date": "2018-09-15",
        "commitResults": [
          {
            "hash": "3d73cf6420bffd1536b53a1bbe2396f99ccc48af",
            "messageTitle": "[#331] UserGuide: update outdated content (#335)",
            "messageBody": "",
            "insertions": 30,
            "deletions": 30
          }
        ]
      },
      {
        "insertions": 13,
        "deletions": 10,
        "date": "2018-09-28",
        "commitResults": [
          {
            "hash": "87f7b567fbbed0e98a1b0aaeba65cd36562b24a2",
            "messageTitle": "[#342] Fix inconsistent length of contribution bar (#346)",
            "messageBody": "Length of the contribution bars varies, dependent on the set of\r\ndisplayed authors.\r\n\r\nThis should not be the case. The scale used for the bar should be fixed\r\nfor a given period irrespective of which authors are displayed. Search\r\nfilters should simply filter out certain authors without changing\r\nanything else.\r\n\r\nLet\u0027s fixed this by performing the calculations on all authors\u0027\r\ncalculation instead of filtered.\r\nAlso, since this value should not change in subsequent events, let\u0027s\r\nonly perform this calculation once and store the value in a global\r\nconstant.",
            "insertions": 13,
            "deletions": 10
          }
        ]
      },
      {
        "insertions": 7,
        "deletions": 1,
        "date": "2018-10-03",
        "commitResults": [
          {
            "hash": "72750365e15bfb8906c90286b95d3841acf32f68",
            "messageTitle": "[#354] granularity#week: fix url not using correct time gap (#355)",
            "messageBody": "When the granularity is set to week in report, the url link is still\r\nusing a single day time gap.\r\n\r\nThis should be updated accordingly to show users the commits that were\r\ndone in the week.\r\n\r\nLet\u0027s update the url function to do a conditional check prior to the\r\ngeneration of hyper link.",
            "insertions": 7,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 19,
        "deletions": 3,
        "date": "2018-10-05",
        "commitResults": [
          {
            "hash": "308e4078d91a69826909ade4b029a60ff68e4f19",
            "messageTitle": "Fix error occurred from file change due to permission bits modification (#356)",
            "messageBody": "We use git diff to extract file infos. In particular rare cases, our\r\ncode fails to extracting relevant file infos for certain commits, due\r\nto special extended header lines `old mode 100644` \r\n`new mode 100755` returned by the git diff, it throws an\r\nAssertionError halfway during the analysis.\r\n\r\nThis is due to git, besides the file content and changes, it also\r\ntracks the executable bit of the files\u0027 permission. As our program did\r\nnot foresee this scenario, it crashes upon the occurrence.\r\n\r\nLet\u0027s fix this by inserting additional guard clause for this scenario\r\nin our FileInfoExtractor.",
            "insertions": 19,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 9,
        "deletions": 1,
        "date": "2018-10-10",
        "commitResults": [
          {
            "hash": "8229759332add46aa499d92a303d23e74a8b8e15",
            "messageTitle": "[#363] Make the commits info analysis case insensitive (#364)",
            "messageBody": "CommitInfoExtractor uses git log to extract users\u0027 commits info.\r\nHowever, by default, the author matching pattern used in git log is\r\ncase sensitive.\r\n\r\nThis can cause the CommitInfoAnalyzer to miss out some or all their\r\ncommits in the analysis. As a result, some authors do not have any\r\nramps shown in their ramp chart, even though their code view shows line\r\ncontributions.\r\n\r\nTo resolve this problem, let\u0027s set the git log regex patterns to be\r\ncase insensitive.",
            "insertions": 9,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 2,
        "deletions": 1,
        "date": "2018-10-21",
        "commitResults": [
          {
            "hash": "0a673c60e93fed29250210f0baa2a6d0995e5f99",
            "messageTitle": "UserGuide: add commit reminder and instructions (#381)",
            "messageBody": "People tend to perform trial and error before committing to the\r\nrepository. However, important files, such as json config, will not be\r\nincluded when we perform the clone on the local repository.\r\n\r\nLet\u0027s add the instructions to request user to commit the files prior to\r\nanalysis.",
            "insertions": 2,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 46,
        "deletions": 24,
        "date": "2018-11-10",
        "commitResults": [
          {
            "hash": "886dee0b1f164649e674d6c374b138d88acd1828",
            "messageTitle": "[#395] Fix unhandled IllegalArgumentException in RepoConfiguration#update (#397)",
            "messageBody": "Standalone config goes through validation check before being utilized\r\nfor analysis. In the event where standalone configs contain invalid\r\nvalue(s), RepoSense will indicate it by throwing an\r\nIllegalArgumentException.\r\n\r\nHowever, in #395, a standalone config with invalid `ignoreCommitList`\r\nwas found in one of the repositories which has caused an intermediate\r\ncrash during the analysis. This is due to the IllegalArgumentException\r\nnot being properly handled.\r\n\r\nLet\u0027s handle the IllegalArgumentException by ignoring the standalone\r\nconfig, also, ensure that none of the fields prior to validation.",
            "insertions": 46,
            "deletions": 24
          }
        ]
      },
      {
        "insertions": 7,
        "deletions": 2,
        "date": "2018-11-12",
        "commitResults": [
          {
            "hash": "3d393c513a262d612629bf2eb6511cd04d6bad87",
            "messageTitle": "[#391, #398, #399] Hotfix for outburst of RuntimeException (#400)",
            "messageBody": "Due to the nature of our application, and the lack of simpler\r\nalternatives, our application heavily relies on the external command\r\nline utility, `git`. To make use of the tool, we employed a\r\nCommandRunner class which starts a separate process to execute various\r\noperations.\r\n\r\nThis, however, encourages the outbreak of RuntimeException as numerous\r\nfactors can cause `git` to return a non-zero status code and\r\nCommandRunner allows these exceptions to go unchecked.\r\n\r\nTo prevent RuntimeException from interrupting the analysis of multiple\r\nrepos, let\u0027s skip the repo under analysis whenever a RunTimeException\r\noccurs.",
            "insertions": 7,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 717,
        "deletions": 582,
        "date": "2018-12-22",
        "commitResults": [
          {
            "hash": "dda75347ebbc305da0d2e20f7fa07423b352b52d",
            "messageTitle": "[#310] Apply SRP to various git commands (#408)",
            "messageBody": "All the git commands are embedded in the CommandRunner class.\r\n\r\nThis violates the Single Responsibility Principle as CommandRunner\r\nshould only be responsible for the execution, and not the type of\r\ncommands.\r\n\r\nAs a step towards deprecating the use of CommandRunner, let\u0027s export\r\nthe commands to respective classes and remove the direct dependency on\r\nCommandRunner.",
            "insertions": 717,
            "deletions": 582
          }
        ]
      },
      {
        "insertions": 2,
        "deletions": 2,
        "date": "2019-01-12",
        "commitResults": [
          {
            "hash": "10fa5d269faf76e72d87aca9ded21babf9f4342e",
            "messageTitle": "[#471] Fix broken link on ramps (#472)",
            "messageBody": "The link on ramps are broken; the organization and repository name on\r\nthe url links are undefined.\r\n\r\nThis is due the change in #425 where we encapsulate the names in\r\nanother layer of abstraction.\r\n\r\nLet\u0027s fix the property accessors in v_summary.js to restore the broken\r\nhyperlink.\r\n",
            "insertions": 2,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 230,
        "deletions": 90,
        "date": "2019-01-22",
        "commitResults": [
          {
            "hash": "5ab03229f29254659ec48752178d5b156e900ef3",
            "messageTitle": "[#375] Config: add new parameter - author\u0027s email (#493)",
            "messageBody": "When merging a pull request on the GitHub platform, GitHub uses the\r\nauthor\u0027s profile name as the Author Name in the merge commit. Unlike\r\nRepoSense which uses Author Name(s) in tracking the authors\u0027\r\ncontribution, GitHub uses emails to track the authors\u0027 activity. \r\n\r\nThis can however pose a problem to our users. When the authors change\r\ntheir profile name, they will need to update their list of aliases in\r\nthe config files correspondingly in order to maintain the trackability\r\nof RepoSense which can be a hassle to our users.\r\n\r\nTo provide better experience to our users, let\u0027s add the email field to\r\nour csv and json configuration files.",
            "insertions": 230,
            "deletions": 90
          }
        ]
      },
      {
        "insertions": 4,
        "deletions": 2,
        "date": "2019-01-24",
        "commitResults": [
          {
            "hash": "2f183c3d5f294d020418dfe94200eda5891512c7",
            "messageTitle": "[#399] Fix RuntimeException due to ambiguous argument in git rev-list (#505)",
            "messageBody": "When a file with the same name as the analyzing branch exist in the\r\nrepo, an uncaught RuntimeException will occur due to ambiguous argument\r\nin git rev-list causing RepoSense to crash.\r\n\r\nLet\u0027s add the `--` revision-path separator in `git rev-list` command to\r\ndistinguish the branch name from the ambiguous argument.",
            "insertions": 4,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 105,
        "deletions": 69,
        "date": "2019-03-09",
        "commitResults": [
          {
            "hash": "7c06d6928ebf4ca1e1d662c60060c485b2903622",
            "messageTitle": "[#587] Fix unoriented output messages (#593)",
            "messageBody": "Some of the messages used in RepoSense are structurally unoriented.\r\n\r\nThis include the missing transition message where --config flag is\r\nunused, using default path for analysis and the double printing of\r\nthe help message, and the confusing arrangement of usage parameters as\r\nshown in #587.\r\n\r\nLet\u0027s fix these scenarios to improve the quality of our output messages.",
            "insertions": 105,
            "deletions": 69
          }
        ]
      },
      {
        "insertions": 30,
        "deletions": 10,
        "date": "2019-03-25",
        "commitResults": [
          {
            "hash": "19e32944d4c67ed0b6bdc5697016536cc9e17ed9",
            "messageTitle": "[#622] CsvParser#parse: fix error handling of `processLine` (#623)",
            "messageBody": "When processing a line that is illegal or erroneous, `processLine` will\r\nthrow an exception to the caller, `parse`, and the process gets\r\nterminated.\r\n\r\nThis result in the rise of an issue in\r\nnus-cs3281/2019-dashboard@ef0791f where a misconfigured line in\r\nauthor-config.csv causes the subsequent lines of authors not being\r\nparsed and added to the analysis.\r\n\r\nAs the lines in our csv config are meant to be separate entities, let\u0027s\r\nignore any misconfigurations and move on to parsing the subsequent\r\nlines.",
            "insertions": 30,
            "deletions": 10
          }
        ]
      },
      {
        "insertions": 94,
        "deletions": 12,
        "date": "2019-08-18",
        "commitResults": [
          {
            "hash": "0637f4b826428e6565deeca59131f1c9a3637037",
            "messageTitle": "AboutUs: update team members (#867)",
            "messageBody": "As more members join and leave us, it is about time for us to distinct\r\nthe active members so that users can easily seek help from us.\r\n\r\nLet\u0027s move our team list to a new page to separate our active and past\r\nmembers into different section. Also, let\u0027s include and update the\r\nroles to accredit our senior members who have been helping out with\r\nmany of the work, including mentoring the newcomers.",
            "insertions": 94,
            "deletions": 12
          }
        ]
      },
      {
        "insertions": 7,
        "deletions": 0,
        "date": "2019-12-24",
        "commitResults": [
          {
            "hash": "4b4ff38a69ce3a2b1732d2e5fc6e48be43c693a4",
            "messageTitle": "README: add acknowledgements section (#978)",
            "messageBody": "It is required for us to acknowledge the use of free services.\r\n\r\nAs part of the requirement to apply for the Open Source Plan from\r\nNetlify, let\u0027s add a section to feature the usage of their services on\r\nREADME.",
            "insertions": 7,
            "deletions": 0
          }
        ]
      }
    ]
  },
  "authorFinalContributionMap": {
    "ongspxm": 577,
    "jamessspanggg": 1175,
    "yamidark": 1585,
    "yong24s": 1757,
    "eugenepeh": 2144
  },
  "authorFileTypeContributionMap": {
    "ongspxm": {
      "gradle": 5,
      "pug": 51,
      "java": 91,
      "js": 354,
      "md": 67,
      "scss": 9,
      "yml": 0
    },
    "jamessspanggg": {
      "gradle": 0,
      "pug": 62,
      "java": 332,
      "js": 371,
      "md": 39,
      "scss": 370,
      "yml": 1
    },
    "yamidark": {
      "gradle": 28,
      "pug": 0,
      "java": 1413,
      "js": 3,
      "md": 140,
      "scss": 0,
      "yml": 1
    },
    "yong24s": {
      "gradle": 34,
      "pug": 0,
      "java": 1552,
      "js": 0,
      "md": 130,
      "scss": 0,
      "yml": 41
    },
    "eugenepeh": {
      "gradle": 8,
      "pug": 27,
      "java": 1381,
      "js": 350,
      "md": 221,
      "scss": 127,
      "yml": 30
    }
  },
  "authorContributionVariance": {
    "ongspxm": 1751.8425,
    "jamessspanggg": 3821.405,
    "yamidark": 6778.3086,
    "yong24s": 2073.072,
    "eugenepeh": 2.2679232E8
  },
  "authorDisplayNameMap": {
    "ongspxm": "Metta",
    "jamessspanggg": "James",
    "yamidark": "Jun An",
    "yong24s": "Yong Hao",
    "eugenepeh": "Eugene"
  }
}
